# -*- coding: utf-8; -*-

* header
  #+BEGIN_SRC emacs-lisp
;; -*-mode: emacs-lisp; coding: utf-8; buffer-read-only: t;-*-

  #+END_SRC
* theme
  #+BEGIN_SRC emacs-lisp

    (defun transparent(alpha-level no-focus-alpha-level)
      "Let's you make the window transparent"
      (interactive "nAlpha level (0-100): \nnNo focus alpha level (0-100): ")
      (set-frame-parameter (selected-frame) 'alpha (list alpha-level no-focus-alpha-level))
      (add-to-list 'default-frame-alist `(alpha ,alpha-level)))

    ;; three window 
    (defun split-window-4()
      "Splite window into 4 sub-window"
      (interactive)
      (if (= 1 (length (window-list)))
          (progn (split-window-vertically)
                 (split-window-horizontally)
                 (other-window 2)
                 (split-window-horizontally)
                 )
        )
      )

    (defun change-split-type (split-fn &optional arg)
      "Change 3 window style from horizontal to vertical and vice-versa"
      (let ((bufList (mapcar 'window-buffer (window-list))))
        (select-window (get-largest-window))
        (funcall split-fn arg)
        (mapcar* 'set-window-buffer (window-list) bufList)))

    (defun change-split-type-2 (&optional arg)
      "Changes splitting from vertical to horizontal and vice-versa"
      (interactive "P")
      (let ((split-type (lambda (&optional arg)
                          (delete-other-windows-internal)
                          (if arg (split-window-vertically)
                            (split-window-horizontally)))))
        (change-split-type split-type arg)))

    (defun change-split-type-3-v (&optional arg)
      "change 3 window style from horizon to vertical"
      (interactive "P")
      (change-split-type 'split-window-3-horizontally arg))

    (defun change-split-type-3-h (&optional arg)
      "change 3 window style from vertical to horizon"
      (interactive "P")
      (change-split-type 'split-window-3-vertically arg))

    (defun split-window-3-horizontally (&optional arg)
      "Split window into 3 while largest one is in horizon"
                                            ;  (interactive "P")
      (delete-other-windows)
      (split-window-horizontally)
      (if arg (other-window 1))
      (split-window-vertically))

    (defun split-window-3-vertically (&optional arg)
      "Split window into 3 while largest one is in vertical"
                                            ;  (interactive "P")
      (delete-other-windows)
      (split-window-vertically)
      (if arg (other-window 1))
      (split-window-horizontally))

    ;;deprecated;;;; paren
    ;;deprecated;;;; http://emacswiki.org/emacs/ShowParenMode
    ;;deprecated;;(require 'mic-paren)
    ;;deprecated;;(paren-activate)
    ;;deprecated;;(show-paren-mode t)

    ;;option(setq show-paren-delay 0)           ; how long to wait?
    ;;option(show-paren-mode t)                 ; turn paren-mode on
    ;;option(setq show-paren-style 'expression) ; alternatives are 'parenthesis' and 'mixed'
    ;;option(setq show-paren-style 'parenthesis)
    ;;option(setq show-paren-style 'mixed)

    (leaf frame-cmds
      :require t
      :config
      (general-define-key
       :keymaps 'global-map
       "\C-xt." 'save-frame-config
       "\C-xt," 'jump-to-frame-config-register))

    ;;(require 'autofit-frame)


    (defun toggle-frame-split ()
      "If the frame is split vertically, split it horizontally or vice versa.
    Assumes that the frame is only split into two."
      (interactive)
      (unless (= (length (window-list)) 2) (error "Can only toggle a frame split in two"))
      (let ((split-vertically-p (window-combined-p)))
        (delete-window) ; closes current window
        (if split-vertically-p
            (split-window-horizontally)
          (split-window-vertically)) ; gives us a split with the other window twice
        (switch-to-buffer nil))) ; restore the original window in this part of the frame

    ;; I don't use the default binding of 'C-x 5', so use toggle-frame-split instead

    ;;; (global-set-key (kbd "C-x 5") 'toggle-frame-split)


    ;;; modeline 
    ;; http://emacs-fu.blogspot.kr/2010/05/cleaning-up-mode-line.html



    ;;And the major-modes, for example for Emacs Lisp mode:
    ;;
    ;;(add-hook 'emacs-lisp-mode-hook 
    ;;  (lambda()
    ;;    (setq mode-name "el")))
    (require 'whitespace)


    ;;customize;; (add-hook 'prog-mode-hook 'whitespace-mode)
    ;;customize;; (global-whitespace-mode +1)

    ;;dump-deprecated;;(winner-mode t )

    ;; (leaf smart-mode-line)
    ;; (leaf sml-modeline-mode)

    (leaf diminish
      :ensure t
      :config
      (diminish 'company-mode "Cmp")
      (diminish 'abbrev-mode "Ab")
      (diminish 'yas/minor-mode "Y")
      (diminish 'yas/minor-mode "Y")
      (diminish 'undo-tree-mode "ut")
      (diminish 'paredit-mode "pe")
      (diminish 'emacs-lisp-mode "EL")
      (diminish 'elisp-mode "el")
      (diminish 'evil-org-mode ))

    (leaf modern-cpp-font-lock
      :ensure t
      :global-minor-mode modern-c++-font-lock-global-mode )
  #+END_SRC

  #+RESULTS:
  : t

* font
** cycle font 
   #+BEGIN_SRC emacs-lisp
     (require 'font-utils)

     (defun* cycle-font (num &optional (hangul nil))
       "Change font in current frame.
     Each time this is called, font cycles thru a predefined set of fonts.
     If NUM is 1, cycle forward.
     If NUM is -1, cycle backward.
     Warning: tested on Windows Vista only."
       (interactive "p")
       ;; this function sets a property “state”. It is a integer. Possible values are any index to the fontList.
       (let (fontList hanFontList fontToUse currentState nextState )
         (setq fontList (list
                         "Courier New-10" 
                         "DejaVu Sans Mono-9" 
                         "Lucida Console-10"
                         "DejaVu Sans-10" 
                         "Lucida Sans Unicode-10" 
                         "Arial Unicode MS-10" 
                         "Consolas-10"
                         "Inconsolata-10"
                         "Monaco-9"
                         ))
         (setq hanFontList (list
                            '("돋움체" . "unicode-bmp")
                            '("새굴림" . "unicode-bmp")
                            '("나눔고딕_코딩" . "unicode-bmp")
                            '("맑은 고딕" . "unicode-bmp")
                            '("나눔고딕코딩" . "unicode-bmp")
                         ))
         ;; fixed-width "Courier New" "Unifont"  "FixedsysTTF" "Miriam Fixed" "Lucida Console" "Lucida Sans Typewriter"
         ;; variable-width "Code2000"

         (if hangul
             (progn
               (setq currentState (if (get 'cycle-font 'hanstate) (get 'cycle-font 'hanstate) 0))
               (setq nextState (% (+ currentState (length hanFontList) num) (length hanFontList)))
               (setq fontToUse (nth nextState hanFontList))
               (set-fontset-font "fontset-default" 'hangul fontToUse)
               (redraw-frame (selected-frame))
               (message "Current font is: %s" (car fontToUse ))
               (put 'cycle-font 'hanstate nextState)
               )
           (progn
             (setq currentState (if (get 'cycle-font 'state) (get 'cycle-font 'state) 0))
             (setq nextState (% (+ currentState (length fontList) num) (length fontList)))
             (setq fontToUse (nth nextState fontList))
             ;;(set-frame-parameter nil 'font fontToUse)
             (set-face-font 'default fontToUse)
             (redraw-frame (selected-frame))
             (message "Current font is: %s" fontToUse )
             (put 'cycle-font 'state nextState)
             )
           )))

     (defun cycle-font-forward (&optional hangul)
       "Switch to the next font, in the current frame.
     See `cycle-font'."
       (interactive "P")
       (if hangul
           (cycle-font 1 t)
         (cycle-font 1 nil)
       ))

     (defun cycle-font-backward(&optional hangul)
       "Switch to the previous font, in the current frame.
     See `cycle-font'."
       (interactive "P")
       (if hangul
           (cycle-font -1 t)
         (cycle-font -1 nil)
       ))

     ;; https://github.com/rolandwalker/unicode-fonts
     ;; (leaf unicode-fonts
     ;;   :config
     ;;   (unicode-fonts-setup))

     ;; (leaf dynamic-fonts
     ;;   :config
     ;;   (dynamic-fonts-setup))

   #+END_SRC

* font help

** font-list 
 #+BEGIN_SRC emacs-lisp :tangle no 
   (-map
    (lambda (x) (list (decode-coding-string x 'utf-8)))
       (font-utils-list-names))

 #+END_SRC

 #+RESULTS:
 | IBM Plex Sans Thai Looped    |
 | IBM Plex Serif               |
 | Latin Modern Math            |
 | Latin Modern Mono            |
 | Latin Modern Mono Caps       |
 | Latin Modern Mono Light      |
 | Latin Modern Mono Light Cond |
 | Latin Modern Mono Prop       |
 | Latin Modern Mono Prop Light |
 | Latin Modern Mono Slanted    |
 | Latin Modern Roman           |
 | Latin Modern Roman Caps      |
 | Latin Modern Roman Demi      |
 | Latin Modern Roman Dunhill   |
 | Latin Modern Roman Slanted   |
 | Latin Modern Roman Unslanted |
 | Latin Modern Sans            |
 | Latin Modern Sans Demi Cond  |
 | Latin Modern Sans Quotation  |
 | Nimbus Mono PS               |
 | Nimbus Roman                 |
 | Nimbus Sans                  |
 | Nimbus Sans Narrow           |
 | Noto Color Emoji             |
 | Noto Emoji                   |
 | Noto Sans CJK KR             |
 | Noto Sans Mono CJK KR        |
 | Noto Serif CJK KR            |
 | P052                         |
 | STIX Two Math                |
 | STIX Two Text                |
 | STIXGeneral                  |
 | Source Code Pro              |
 | Standard Symbols PS          |
 | Symbola                      |
 | URW Bookman                  |
 | URW Gothic                   |
 | Z003                         |
 | application                  |
 | charter                      |
 | clean                        |
 | courier                      |
 | cursor                       |
 | fangsong ti                  |
 | fixed                        |
 | gothic                       |
 | helvetica                    |
 | interface system             |
 | interface user               |
 | lucida                       |
 | lucidabright                 |
 | lucidatypewriter             |
 | lucidux mono                 |
 | lucidux sans                 |
 | lucidux serif                |
 | mincho                       |
 | myeongjo                     |
 | new century schoolbook       |
 | open look cursor             |
 | open look glyph              |
 | supplement                   |
 | symbol                       |
 | terminal                     |
 | times                        |
 | utopia                       |
 | 굴림                         |
 | 굴림체                       |
 | 궁서                         |
 | 궁서체                       |
 | 나눔고딕                     |
 | 나눔고딕코딩                 |
 | 나눔명조                     |
 | 나눔바른고딕                 |
 | 나눔바른펜                   |
 | 나눔손글씨 붓                |
 | 나눔손글씨 펜                |
 | 돋움                         |
 | 돋움체                       |
 | 맑은 고딕                    |
 | 바탕                         |
 | 바탕체                       |
 | 휴먼가는샘체                 |


** unicode characters                                              :document:
   [[https://en.wikibooks.org/wiki/Unicode/List_of_useful_symbols][Unicode/List
   of useful symbols - Wikibooks, open books for an open world]]

   [[http://www.copypastecharacter.com/emojis][🎳 Emojis — CopyPasteCharacter.com]]

*** check
    #+BEGIN_SRC emacs-lisp :tangle no
      (dolist (x
      '(
      #x1F004
      #x1F0CF
      #x1F170
      #x1F171
      #x1F17E
      #x1F17F
      #x1F18E
      #x1F191
      #x1F192
      #x1F193
      #x1F194
      #x1F195
      #x1F196
      #x1F197
      #x1F198
      #x1F199
      #x1F19A
      #x1F1E6
      #x1F1E7
      #x1F1E8
      #x1F1E9
      #x1F1EA
      #x1F1EB
      #x1F1EC
      #x1F1ED
      #x1F1EE
      #x1F1EF
      #x1F1F0
      #x1F1F1
      #x1F1F2
      #x1F1F3
      #x1F1F4
      #x1F1F5
      #x1F1F6
      #x1F1F7
      #x1F1F8
      #x1F1F9
      #x1F1FA
      #x1F1FB
      #x1F1FC
      #x1F1FD
      #x1F1FE
      #x1F1FF
      #x1F201
      #x1F202
      #x1F21A
      #x1F22F
      #x1F232
      #x1F233
      #x1F234
      #x1F235
      #x1F236
      #x1F237
      #x1F238
      #x1F239
      #x1F23A
      #x1F250
      #x1F251
      #x1F300
      #x1F301
      #x1F302
      #x1F303
      #x1F304
      #x1F305
      #x1F306
      #x1F307
      #x1F308
      #x1F309
      #x1F30A
      #x1F30B
      #x1F30C
      #x1F30D
      #x1F30E
      #x1F30F
      #x1F310
      #x1F311
      #x1F312
      #x1F313
      #x1F314
      #x1F315
      #x1F316
      #x1F317
      #x1F318
      #x1F319
      #x1F31A
      #x1F31B
      #x1F31C
      #x1F31D
      #x1F31E
      #x1F31F
      #x1F320
      #x1F330
      #x1F331
      #x1F332
      #x1F333
      #x1F334
      #x1F335
      #x1F337
      #x1F338
      #x1F339
      #x1F33A
      #x1F33B
      #x1F33C
      #x1F33D
      #x1F33E
      #x1F33F
      #x1F340
      #x1F341
      #x1F342
      #x1F343
      #x1F344
      #x1F345
      #x1F346
      #x1F347
      #x1F348
      #x1F349
      #x1F34A
      #x1F34B
      #x1F34C
      #x1F34D
      #x1F34E
      #x1F34F
      #x1F350
      #x1F351
      #x1F352
      #x1F353
      #x1F354
      #x1F355
      #x1F356
      #x1F357
      #x1F358
      #x1F359
      #x1F35A
      #x1F35B
      #x1F35C
      #x1F35D
      #x1F35E
      #x1F35F
      #x1F360
      #x1F361
      #x1F362
      #x1F363
      #x1F364
      #x1F365
      #x1F366
      #x1F367
      #x1F368
      #x1F369
      #x1F36A
      #x1F36B
      #x1F36C
      #x1F36D
      #x1F36E
      #x1F36F
      #x1F370
      #x1F371
      #x1F372
      #x1F373
      #x1F374
      #x1F375
      #x1F376
      #x1F377
      #x1F378
      #x1F379
      #x1F37A
      #x1F37B
      #x1F37C
      #x1F380
      #x1F381
      #x1F382
      #x1F383
      #x1F384
      #x1F385
      #x1F386
      #x1F387
      #x1F388
      #x1F389
      #x1F38A
      #x1F38B
      #x1F38C
      #x1F38D
      #x1F38E
      #x1F38F
      #x1F390
      #x1F391
      #x1F392
      #x1F393
      #x1F3A0
      #x1F3A1
      #x1F3A2
      #x1F3A3
      #x1F3A4
      #x1F3A5
      #x1F3A6
      #x1F3A7
      #x1F3A8
      #x1F3A9
      #x1F3AA
      #x1F3AB
      #x1F3AC
      #x1F3AD
      #x1F3AE
      #x1F3AF
      #x1F3B0
      #x1F3B1
      #x1F3B2
      #x1F3B3
      #x1F3B4
      #x1F3B5
      #x1F3B6
      #x1F3B7
      #x1F3B8
      #x1F3B9
      #x1F3BA
      #x1F3BB
      #x1F3BC
      #x1F3BD
      #x1F3BE
      #x1F3BF
      #x1F3C0
      #x1F3C1
      #x1F3C2
      #x1F3C3
      #x1F3C4
      #x1F3C6
      #x1F3C7
      #x1F3C8
      #x1F3C9
      #x1F3CA
      #x1F3E0
      #x1F3E1
      #x1F3E2
      #x1F3E3
      #x1F3E4
      #x1F3E5
      #x1F3E6
      #x1F3E7
      #x1F3E8
      #x1F3E9
      #x1F3EA
      #x1F3EB
      #x1F3EC
      #x1F3ED
      #x1F3EE
      #x1F3EF
      #x1F3F0
      #x1F400
      #x1F401
      #x1F402
      #x1F403
      #x1F404
      #x1F405
      #x1F406
      #x1F407
      #x1F408
      #x1F409
      #x1F40A
      #x1F40B
      #x1F40C
      #x1F40D
      #x1F40E
      #x1F40F
      #x1F410
      #x1F411
      #x1F412
      #x1F413
      #x1F414
      #x1F415
      #x1F416
      #x1F417
      #x1F418
      #x1F419
      #x1F41A
      #x1F41B
      #x1F41C
      #x1F41D
      #x1F41E
      #x1F41F
      #x1F420
      #x1F421
      #x1F422
      #x1F423
      #x1F424
      #x1F425
      #x1F426
      #x1F427
      #x1F428
      #x1F429
      #x1F42B
      #x1F42C
      #x1F42D
      #x1F42E
      #x1F42F
      #x1F430
      #x1F431
      #x1F432
      #x1F433
      #x1F434
      #x1F435
      #x1F436
      #x1F437
      #x1F438
      #x1F439
      #x1F43A
      #x1F43B
      #x1F43C
      #x1F43D
      #x1F43E
      #x1F440
      #x1F442
      #x1F443
      #x1F444
      #x1F445
      #x1F446
      #x1F447
      #x1F448
      #x1F449
      #x1F44A
      #x1F44B
      #x1F44C
      #x1F44D
      #x1F44E
      #x1F44F
      #x1F450
      #x1F451
      #x1F452
      #x1F453
      #x1F454
      #x1F455
      #x1F456
      #x1F457
      #x1F458
      #x1F459
      #x1F45A
      #x1F45B
      #x1F45C
      #x1F45D
      #x1F45E
      #x1F45F
      #x1F460
      #x1F461
      #x1F462
      #x1F463
      #x1F464
      #x1F465
      #x1F466
      #x1F467
      #x1F468
      #x1F469
      #x1F46A
      #x1F46B
      #x1F46C
      #x1F46D
      #x1F46E
      #x1F46F
      #x1F470
      #x1F471
      #x1F472
      #x1F473
      #x1F474
      #x1F475
      #x1F476
      #x1F477
      #x1F478
      #x1F479
      #x1F47A
      #x1F47B
      #x1F47C
      #x1F47D
      #x1F47E
      #x1F47F
      #x1F480
      #x1F481
      #x1F482
      #x1F483
      #x1F484
      #x1F485
      #x1F486
      #x1F487
      #x1F488
      #x1F489
      #x1F48A
      #x1F48B
      #x1F48C
      #x1F48D
      #x1F48E
      #x1F48F
      #x1F490
      #x1F491
      #x1F492
      #x1F493
      #x1F494
      #x1F495
      #x1F496
      #x1F497
      #x1F498
      #x1F499
      #x1F49A
      #x1F49B
      #x1F49C
      #x1F49D
      #x1F49E
      #x1F49F
      #x1F4A0
      #x1F4A1
      #x1F4A2
      #x1F4A3
      #x1F4A4
      #x1F4A5
      #x1F4A6
      #x1F4A7
      #x1F4A8
      #x1F4A9
      #x1F4AA
      #x1F4AB
      #x1F4AC
      #x1F4AD
      #x1F4AE
      #x1F4AF
      #x1F4B0
      #x1F4B1
      #x1F4B2
      #x1F4B3
      #x1F4B4
      #x1F4B5
      #x1F4B6
      #x1F4B7
      #x1F4B8
      #x1F4B9
      #x1F4BA
      #x1F4BB
      #x1F4BC
      #x1F4BD
      #x1F4BE
      #x1F4BF
      #x1F4C0
      #x1F4C1
      #x1F4C2
      #x1F4C3
      #x1F4C4
      #x1F4C5
      #x1F4C6
      #x1F4C7
      #x1F4C8
      #x1F4C9
      #x1F4CA
      #x1F4CB
      #x1F4CC
      #x1F4CD
      #x1F4CE
      #x1F4CF
      #x1F4D0
      #x1F4D1
      #x1F4D2
      #x1F4D3
      #x1F4D4
      #x1F4D5
      #x1F4D6
      #x1F4D7
      #x1F4D8
      #x1F4D9
      #x1F4DA
      #x1F4DB
      #x1F4DC
      #x1F4DD
      #x1F4DE
      #x1F4DF
      #x1F4E0
      #x1F4E1
      #x1F4E2
      #x1F4E3
      #x1F4E4
      #x1F4E5
      #x1F4E6
      #x1F4E7
      #x1F4E8
      #x1F4E9
      #x1F4EA
      #x1F4EB
      #x1F4EC
      #x1F4ED
      #x1F4EE
      #x1F4EF
      #x1F4F0
      #x1F4F1
      #x1F4F2
      #x1F4F3
      #x1F4F4
      #x1F4F5
      #x1F4F6
      #x1F4F7
      #x1F4F9
      #x1F4FA
      #x1F4FB
      #x1F4FC
      #x1F500
      #x1F501
      #x1F502
      #x1F503
      #x1F504
      #x1F505
      #x1F506
      #x1F507
      #x1F508
      #x1F509
      #x1F50A
      #x1F50B
      #x1F50C
      #x1F50D
      #x1F50E
      #x1F50F
      #x1F510
      #x1F511
      #x1F512
      #x1F513
      #x1F514
      #x1F515
      #x1F516
      #x1F517
      #x1F518
      #x1F519
      #x1F51A
      #x1F51B
      #x1F51C
      #x1F51D
      #x1F51E
      #x1F51F
      #x1F520
      #x1F521
      #x1F522
      #x1F523
      #x1F524
      #x1F525
      #x1F526
      #x1F527
      #x1F528
      #x1F529
      #x1F52A
      #x1F52B
      #x1F52C
      #x1F52D
      #x1F52E
      #x1F52F
      #x1F530
      #x1F531
      #x1F532
      #x1F533
      #x1F534
      #x1F535
      #x1F536
      #x1F537
      #x1F538
      #x1F539
      #x1F53A
      #x1F53B
      #x1F53C
      #x1F53D
      #x1F550
      #x1F551
      #x1F552
      #x1F553
      #x1F554
      #x1F555
      #x1F556
      #x1F557
      #x1F558
      #x1F559
      #x1F55A
      #x1F55B
      #x1F55C
      #x1F55D
      #x1F55E
      #x1F55F
      #x1F560
      #x1F561
      #x1F562
      #x1F563
      #x1F564
      #x1F565
      #x1F566
      #x1F567
      #x1F5FB
      #x1F5FC
      #x1F5FD
      #x1F5FE
      #x1F5FF
      #x1F600
      #x1F601
      #x1F602
      #x1F603
      #x1F604
      #x1F605
      #x1F606
      #x1F607
      #x1F608
      #x1F609
      #x1F60A
      #x1F60B
      #x1F60C
      #x1F60D
      #x1F60E
      #x1F60F
      #x1F610
      #x1F611
      #x1F612
      #x1F613
      #x1F614
      #x1F615
      #x1F616
      #x1F617
      #x1F618
      #x1F619
      #x1F61A
      #x1F61B
      #x1F61C
      #x1F61D
      #x1F61E
      #x1F61F
      #x1F620
      #x1F621
      #x1F622
      #x1F623
      #x1F624
      #x1F625
      #x1F626
      #x1F627
      #x1F628
      #x1F629
      #x1F62A
      #x1F62B
      #x1F62C
      #x1F62D
      #x1F62E
      #x1F62F
      #x1F630
      #x1F631
      #x1F632
      #x1F633
      #x1F634
      #x1F635
      #x1F636
      #x1F637
      #x1F638
      #x1F639
      #x1F63A
      #x1F63B
      #x1F63C
      #x1F63D
      #x1F63E
      #x1F63F
      #x1F640
      #x1F645
      #x1F646
      #x1F647
      #x1F648
      #x1F649
      #x1F64A
      #x1F64B
      #x1F64C
      #x1F64D
      #x1F64E
      #x1F64F
      #x1F680
      #x1F681
      #x1F682
      #x1F683
      #x1F684
      #x1F685
      #x1F686
      #x1F687
      #x1F688
      #x1F689
      #x1F68A
      #x1F68B
      #x1F68C
      #x1F68D
      #x1F68E
      #x1F68F
      #x1F690
      #x1F691
      #x1F692
      #x1F693
      #x1F694
      #x1F695
      #x1F696
      #x1F697
      #x1F699
      #x1F69A
      #x1F69B
      #x1F69C
      #x1F69D
      #x1F69E
      #x1F69F
      #x1F6A0
      #x1F6A1
      #x1F6A2
      #x1F6A3
      #x1F6A4
      #x1F6A5
      #x1F6A6
      #x1F6A7
      #x1F6A8
      #x1F6A9
      #x1F6AA
      #x1F6AB
      #x1F6AC
      #x1F6AD
      #x1F6AE
      #x1F6AF
      #x1F6B0
      #x1F6B1
      #x1F6B2
      #x1F6B3
      #x1F6B4
      #x1F6B5
      #x1F6B6
      #x1F6B7
      #x1F6B8
      #x1F6B9
      #x1F6BA
      #x1F6BB
      #x1F6BC
      #x1F6BD
      #x1F6BE
      #x1F6BF
      #x1F6C0
      #x1F6C1
      #x1F6C2
      #x1F6C3
      #x1F6C4
      #x1F6C5
      #xFE4E5
      #xFE4E6
      #xFE4E7
      #xFE4E8
      #xFE4E9
      #xFE4EA
      #xFE4EB
      #xFE4EC
      #xFE4ED
      #xFE4EE))
      (insert "\n")
      (insert-char x)
      )
 🀄
 🃏
 🅰
 🅱
 🅾
 🅿
 🆎
 🆑
 🆒
 🆓
 🆔
 🆕
 🆖
 🆗
 🆘
 🆙
 🆚
 🇦
 🇧
 🇨
 🇩
 🇪
 🇫
 🇬
 🇭
 🇮
 🇯
 🇰
 🇱
 🇲
 🇳
 🇴
 🇵
 🇶
 🇷
 🇸
 🇹
 🇺
 🇻
 🇼
 🇽
 🇾
 🇿
 🈁
 🈂
 🈚
 🈯
 🈲
 🈳
 🈴
 🈵
 🈶
 🈷
 🈸
 🈹
 🈺
 🉐
 🉑
 🌀
 🌁
 🌂
 🌃
 🌄
 🌅
 🌆
 🌇
 🌈
 🌉
 🌊
 🌋
 🌌
 🌍
 🌎
 🌏
 🌐
 🌑
 🌒
 🌓
 🌔
 🌕
 🌖
 🌗
 🌘
 🌙
 🌚
 🌛
 🌜
 🌝
 🌞
 🌟
 🌠
 🌰
 🌱
 🌲
 🌳
 🌴
 🌵
 🌷
 🌸
 🌹
 🌺
 🌻
 🌼
 🌽
 🌾
 🌿
 🍀
 🍁
 🍂
 🍃
 🍄
 🍅
 🍆
 🍇
 🍈
 🍉
 🍊
 🍋
 🍌
 🍍
 🍎
 🍏
 🍐
 🍑
 🍒
 🍓
 🍔
 🍕
 🍖
 🍗
 🍘
 🍙
 🍚
 🍛
 🍜
 🍝
 🍞
 🍟
 🍠
 🍡
 🍢
 🍣
 🍤
 🍥
 🍦
 🍧
 🍨
 🍩
 🍪
 🍫
 🍬
 🍭
 🍮
 🍯
 🍰
 🍱
 🍲
 🍳
 🍴
 🍵
 🍶
 🍷
 🍸
 🍹
 🍺
 🍻
 🍼
 🎀
 🎁
 🎂
 🎃
 🎄
 🎅
 🎆
 🎇
 🎈
 🎉
 🎊
 🎋
 🎌
 🎍
 🎎
 🎏
 🎐
 🎑
 🎒
 🎓
 🎠
 🎡
 🎢
 🎣
 🎤
 🎥
 🎦
 🎧
 🎨
 🎩
 🎪
 🎫
 🎬
 🎭
 🎮
 🎯
 🎰
 🎱
 🎲
 🎳
 🎴
 🎵
 🎶
 🎷
 🎸
 🎹
 🎺
 🎻
 🎼
 🎽
 🎾
 🎿
 🏀
 🏁
 🏂
 🏃
 🏄
 🏆
 🏇
 🏈
 🏉
 🏊
 🏠
 🏡
 🏢
 🏣
 🏤
 🏥
 🏦
 🏧
 🏨
 🏩
 🏪
 🏫
 🏬
 🏭
 🏮
 🏯
 🏰
 🐀
 🐁
 🐂
 🐃
 🐄
 🐅
 🐆
 🐇
 🐈
 🐉
 🐊
 🐋
 🐌
 🐍
 🐎
 🐏
 🐐
 🐑
 🐒
 🐓
 🐔
 🐕
 🐖
 🐗
 🐘
 🐙
 🐚
 🐛
 🐜
 🐝
 🐞
 🐟
 🐠
 🐡
 🐢
 🐣
 🐤
 🐥
 🐦
 🐧
 🐨
 🐩
 🐫
 🐬
 🐭
 🐮
 🐯
 🐰
 🐱
 🐲
 🐳
 🐴
 🐵
 🐶
 🐷
 🐸
 🐹
 🐺
 🐻
 🐼
 🐽
 🐾
 👀
 👂
 👃
 👄
 👅
 👆
 👇
 👈
 👉
 👊
 👋
 👌
 👍
 👎
 👏
 👐
 👑
 👒
 👓
 👔
 👕
 👖
 👗
 👘
 👙
 👚
 👛
 👜
 👝
 👞
 👟
 👠
 👡
 👢
 👣
 👤
 👥
 👦
 👧
 👨
 👩
 👪
 👫
 👬
 👭
 👮
 👯
 👰
 👱
 👲
 👳
 👴
 👵
 👶
 👷
 👸
 👹
 👺
 👻
 👼
 👽
 👾
 👿
 💀
 💁
 💂
 💃
 💄
 💅
 💆
 💇
 💈
 💉
 💊
 💋
 💌
 💍
 💎
 💏
 💐
 💑
 💒
 💓
 💔
 💕
 💖
 💗
 💘
 💙
 💚
 💛
 💜
 💝
 💞
 💟
 💠
 💡
 💢
 💣
 💤
 💥
 💦
 💧
 💨
 💩
 💪
 💫
 💬
 💭
 💮
 💯
 💰
 💱
 💲
 💳
 💴
 💵
 💶
 💷
 💸
 💹
 💺
 💻
 💼
 💽
 💾
 💿
 📀
 📁
 📂
 📃
 📄
 📅
 📆
 📇
 📈
 📉
 📊
 📋
 📌
 📍
 📎
 📏
 📐
 📑
 📒
 📓
 📔
 📕
 📖
 📗
 📘
 📙
 📚
 📛
 📜
 📝
 📞
 📟
 📠
 📡
 📢
 📣
 📤
 📥
 📦
 📧
 📨
 📩
 📪
 📫
 📬
 📭
 📮
 📯
 📰
 📱
 📲
 📳
 📴
 📵
 📶
 📷
 📹
 📺
 📻
 📼
 🔀
 🔁
 🔂
 🔃
 🔄
 🔅
 🔆
 🔇
 🔈
 🔉
 🔊
 🔋
 🔌
 🔍
 🔎
 🔏
 🔐
 🔑
 🔒
 🔓
 🔔
 🔕
 🔖
 🔗
 🔘
 🔙
 🔚
 🔛
 🔜
 🔝
 🔞
 🔟
 🔠
 🔡
 🔢
 🔣
 🔤
 🔥
 🔦
 🔧
 🔨
 🔩
 🔪
 🔫
 🔬
 🔭
 🔮
 🔯
 🔰
 🔱
 🔲
 🔳
 🔴
 🔵
 🔶
 🔷
 🔸
 🔹
 🔺
 🔻
 🔼
 🔽
 🕐
 🕑
 🕒
 🕓
 🕔
 🕕
 🕖
 🕗
 🕘
 🕙
 🕚
 🕛
 🕜
 🕝
 🕞
 🕟
 🕠
 🕡
 🕢
 🕣
 🕤
 🕥
 🕦
 🕧
 🗻
 🗼
 🗽
 🗾
 🗿
 😀
 😁
 😂
 😃
 😄
 😅
 😆
 😇
 😈
 😉
 😊
 😋
 😌
 😍
 😎
 😏
 😐
 😑
 😒
 😓
 😔
 😕
 😖
 😗
 😘
 😙
 😚
 😛
 😜
 😝
 😞
 😟
 😠
 😡
 😢
 😣
 😤
 😥
 😦
 😧
 😨
 😩
 😪
 😫
 😬
 😭
 😮
 😯
 😰
 😱
 😲
 😳
 😴
 😵
 😶
 😷
 😸
 😹
 😺
 😻
 😼
 😽
 😾
 😿
 🙀
 🙅
 🙆
 🙇
 🙈
 🙉
 🙊
 🙋
 🙌
 🙍
 🙎
 🙏
 🚀
 🚁
 🚂
 🚃
 🚄
 🚅
 🚆
 🚇
 🚈
 🚉
 🚊
 🚋
 🚌
 🚍
 🚎
 🚏
 🚐
 🚑
 🚒
 🚓
 🚔
 🚕
 🚖
 🚗
 🚙
 🚚
 🚛
 🚜
 🚝
 🚞
 🚟
 🚠
 🚡
 🚢
 🚣
 🚤
 🚥
 🚦
 🚧
 🚨
 🚩
 🚪
 🚫
 🚬
 🚭
 🚮
 🚯
 🚰
 🚱
 🚲
 🚳
 🚴
 🚵
 🚶
 🚷
 🚸
 🚹
 🚺
 🚻
 🚼
 🚽
 🚾
 🚿
 🛀
 🛁
 🛂
 🛃
 🛄
 🛅
 󾓥
 󾓦
 󾓧
 󾓨
 󾓩
 󾓪
 󾓫
 󾓬
 󾓭
 󾓮

    #+END_SRC

    #+RESULTS:


*** http://jrgraphix.net/r/Unicode/2B00-2BFF
    ☀
    2600
    ☁
    2601
    ☂
    2602
    ☃
    2603
    ☄
    2604
    ★
    2605
    ☆
    2606
    ☇
    2607
    ☈
    2608
    ☉
    2609
    ☊
    260a
    ☋
    260b
    ☌
    260c
    ☍
    260d
    ☎
    260e
    ☏
    260f
    ☐
    2610
    ☑
    2611
    ☒
    2612
    ☓
    2613
    ☔
    2614
    ☕
    2615
    ☖
    2616
    ☗
    2617
    ☘
    2618
    ☙
    2619
    ☚
    261a
    ☛
    261b
    ☜
    261c
    ☝
    261d
    ☞
    261e
    ☟
    261f
    ☠
    2620
    ☡
    2621
    ☢
    2622
    ☣
    2623
    ☤
    2624
    ☥
    2625
    ☦
    2626
    ☧
    2627
    ☨
    2628
    ☩
    2629
    ☪
    262a
    ☫
    262b
    ☬
    262c
    ☭
    262d
    ☮
    262e
    ☯
    262f
    ☰
    2630
    ☱
    2631
    ☲
    2632
    ☳
    2633
    ☴
    2634
    ☵
    2635
    ☶
    2636
    ☷
    2637
    ☸
    2638
    ☹
    2639
    ☺
    263a
    ☻
    263b
    ☼
    263c
    ☽
    263d
    ☾
    263e
    ☿
    263f
    ♀
    2640
    ♁
    2641
    ♂
    2642
    ♃
    2643
    ♄
    2644
    ♅
    2645
    ♆
    2646
    ♇
    2647
    ♈
    2648
    ♉
    2649
    ♊
    264a
    ♋
    264b
    ♌
    264c
    ♍
    264d
    ♎
    264e
    ♏
    264f
    ♐
    2650
    ♑
    2651
    ♒
    2652
    ♓
    2653
    ♔
    2654
    ♕
    2655
    ♖
    2656
    ♗
    2657
    ♘
    2658
    ♙
    2659
    ♚
    265a
    ♛
    265b
    ♜
    265c
    ♝
    265d
    ♞
    265e
    ♟
    265f
    ♠
    2660
    ♡
    2661
    ♢
    2662
    ♣
    2663
    ♤
    2664
    ♥
    2665
    ♦
    2666
    ♧
    2667
    ♨
    2668
    ♩
    2669
    ♪
    266a
    ♫
    266b
    ♬
    266c
    ♭
    266d
    ♮
    266e
    ♯
    266f
    ♰
    2670
    ♱
    2671
    ♲
    2672
    ♳
    2673
    ♴
    2674
    ♵
    2675
    ♶
    2676
    ♷
    2677
    ♸
    2678
    ♹
    2679
    ♺
    267a
    ♻
    267b
    ♼
    267c
    ♽
    267d
    ♾
    267e
    ♿
    267f
    ⚀
    2680
    ⚁
    2681
    ⚂
    2682
    ⚃
    2683
    ⚄
    2684
    ⚅
    2685
    ⚆
    2686
    ⚇
    2687
    ⚈
    2688
    ⚉
    2689
    ⚊
    268a
    ⚋
    268b
    ⚌
    268c
    ⚍
    268d
    ⚎
    268e
    ⚏
    268f
    ⚐
    2690
    ⚑
    2691
    ⚒
    2692
    ⚓
    2693
    ⚔
    2694
    ⚕
    2695
    ⚖
    2696
    ⚗
    2697
    ⚘
    2698
    ⚙
    2699
    ⚚
    269a
    ⚛
    269b
    ⚜
    269c
    ⚝
    269d
    ⚞
    269e
    ⚟
    269f
    ⚠
    26a0
    ⚡
    26a1
    ⚢
    26a2
    ⚣
    26a3
    ⚤
    26a4
    ⚥
    26a5
    ⚦
    26a6
    ⚧
    26a7
    ⚨
    26a8
    ⚩
    26a9
    ⚪
    26aa
    ⚫
    26ab
    ⚬
    26ac
    ⚭
    26ad
    ⚮
    26ae
    ⚯
    26af
    ⚰
    26b0
    ⚱
    26b1
    ⚲
    26b2
    ⚳
    26b3
    ⚴
    26b4
    ⚵
    26b5
    ⚶
    26b6
    ⚷
    26b7
    ⚸
    26b8
    ⚹
    26b9
    ⚺
    26ba
    ⚻
    26bb
    ⚼
    26bc
    ⚽
    26bd
    ⚾
    26be
    ⚿
    26bf
    ⛀
    26c0
    ⛁
    26c1
    ⛂
    26c2
    ⛃
    26c3
    ⛄
    26c4
    ⛅
    26c5
    ⛆
    26c6
    ⛇
    26c7
    ⛈
    26c8
    ⛉
    26c9
    ⛊
    26ca
    ⛋
    26cb
    ⛌
    26cc
    ⛍
    26cd
    ⛎
    26ce
    ⛏
    26cf
    ⛐
    26d0
    ⛑
    26d1
    ⛒
    26d2
    ⛓
    26d3
    ⛔
    26d4
    ⛕
    26d5
    ⛖
    26d6
    ⛗
    26d7
    ⛘
    26d8
    ⛙
    26d9
    ⛚
    26da
    ⛛
    26db
    ⛜
    26dc
    ⛝
    26dd
    ⛞
    26de
    ⛟
    26df
    ⛠
    26e0
    ⛡
    26e1
    ⛢
    26e2
    ⛣
    26e3
    ⛤
    26e4
    ⛥
    26e5
    ⛦
    26e6
    ⛧
    26e7
    ⛨
    26e8
    ⛩
    26e9
    ⛪
    26ea
    ⛫
    26eb
    ⛬
    26ec
    ⛭
    26ed
    ⛮
    26ee
    ⛯
    26ef
    ⛰
    26f0
    ⛱
    26f1
    ⛲
    26f2
    ⛳
    26f3
    ⛴
    26f4
    ⛵
    26f5
    ⛶
    26f6
    ⛷
    26f7
    ⛸
    26f8
    ⛹
    26f9
    ⛺
    26fa
    ⛻
    26fb
    ⛼
    26fc
    ⛽
    26fd
    ⛾
    26fe
    ⛿
    26ff
    2600-26FF  
 
*** several files

    lack sun with rays 	☀ 	U+2600 	&#9728; 	Clear weather
    Cloud 	☁ 	U+2601 	&#9729; 	Cloud, cloudy weather
    Umbrella 	☂ 	U+2602 	&#9730; 	Umbrella, rainy weather
    Snowman 	☃ 	U+2603 	&#9731; 	Snowman, snowy weather
    Comet 	☄ 	U+2604 	&#9732; 	
    Black star 	★ 	U+2605 	&#9733; 	
    White star 	☆ 	U+2606 	&#9734; 	
    Lightning 	☇ 	U+2607 	&#9735; 	Lightning
    Thunderstorm 	☈ 	U+2608 	&#9736; 	Thunderstorm
    Sun 	☉ 	U+2609 	&#9737; 	Sun, gold
    Ascending node 	☊ 	U+260A 	&#9738; 	
    Descending node 	☋ 	U+260B 	&#9739; 	
    Conjunction 	☌ 	U+260C 	&#9740; 	Open Circuit
    Opposition 	☍ 	U+260D 	&#9741; 	Closed Circuit
    Black telephone 	☎ 	U+260E 	&#9742; 	
    White telephone 	☏ 	U+260F 	&#9743; 	
    Ballot box 	☐ 	U+2610 	&#9744; 	
    Ballot box with check 	☑ 	U+2611 	&#9745; 	
    Ballot box with X 	☒ 	U+2612 	&#9746; 	
    Saltire 	☓ 	U+2613 	&#9747; 	
    Umbrella with raindrops 	☔ 	U+2614 	&#9748; 	showery weather
    Hot beverage 	☕ 	U+2615 	&#9749; 	Tea, coffee
    White shogi piece 	☖ 	U+2616 	&#9750; 	
    Black shogi piece 	☗ 	U+2617 	&#9751; 	
    Shamrock 	☘ 	U+2618 	&#9752; 	
    Reversed rotated floral heart bullet 	☙ 	U+2619 	&#9753; 	Binding signature mark
    Black left pointing index 	☚ 	U+261A 	&#9754; 	
    Black right pointing index 	☛ 	U+261B 	&#9755; 	
    White left pointing index 	☜ 	U+261C 	&#9756; 	
    White up pointing index 	☝ 	U+261D 	&#9757; 	
    White right pointing index 	☞ 	U+261E 	&#9758; 	
    White down pointing index 	☟ 	U+261F 	&#9759; 	
    Skull and crossbones 	☠ 	U+2620 	&#9760; 	Poison
    Caution sign 	☡ 	U+2621 	&#9761; 	
    Radioactive sign 	☢ 	U+2622 	&#9762; 	
    Biohazard sign 	☣ 	U+2623 	&#9763; 	
    Caduceus 	☤ 	U+2624 	&#9764; 	
    Ankh 	☥ 	U+2625 	&#9765; 	
    Orthodox cross 	☦ 	U+2626 	&#9766; 	Patriarchal cross
    Chi Rho 	☧ 	U+2627 	&#9767; 	Labarum
    Cross of Lorraine 	☨ 	U+2628 	&#9768; 	Patriarchal cross
    Cross of Jerusalem 	☩ 	U+2629 	&#9769; 	Cross potent
    Star and crescent 	☪ 	U+262A 	&#9770; 	emblem of Turkey; Islam
    Farsi symbol 	☫ 	U+262B 	&#9771; 	Coat of arms of Iran
    Adi shakti 	☬ 	U+262C 	&#9772; 	Khanda
    Hammer and sickle 	☭ 	U+262D 	&#9773; 	Communism
    Peace symbol 	☮ 	U+262E 	&#9774; 	
    Yin yang 	☯ 	U+262F 	&#9775; 	Taoism, Balance
    Trigram for Heaven 	☰ 	U+2630 	&#9776; 	
    Trigram for Lake 	☱ 	U+2631 	&#9777; 	
    Trigram for Fire 	☲ 	U+2632 	&#9778; 	
    Trigram for Thunder 	☳ 	U+2633 	&#9779; 	
    Trigram for Wind 	☴ 	U+2634 	&#9780; 	
    Trigram for Water 	☵ 	U+2635 	&#9781; 	
    Trigram for Mountain 	☶ 	U+2636 	&#9782; 	
    Trigram for Earth 	☷ 	U+2637 	&#9783; 	
    Wheel of Dharma 	☸ 	U+2638 	&#9784; 	
    White frowning face 	☹ 	U+2639 	&#9785; 	
    White smiling face 	☺ 	U+263A 	&#9786; 	
    Black smiling face 	☻ 	U+263B 	&#9787; 	
    White sun with rays 	☼ 	U+263C 	&#9788; 	Compass
    First quarter moon 	☽ 	U+263D 	&#9789; 	Silver
    Last quarter moon 	☾ 	U+263E 	&#9790; 	
    Mercury 	☿ 	U+263F 	&#9791; 	Mercury (planet), Mercury (element)
    Venus 	♀ 	U+2640 	&#9792; 	Venus (planet), copper, feminism
    Earth 	♁ 	U+2641 	&#9793; 	Antimony
    Mars 	♂ 	U+2642 	&#9794; 	Mars (planet), iron, masculinity
    Jupiter 	♃ 	U+2643 	&#9795; 	Jupiter (planet), Tin
    Saturn 	♄ 	U+2644 	&#9796; 	Saturn (planet), Lead
    Uranus 	♅ 	U+2645 	&#9797; 	For the astronomical symbol see U+26E2
    Neptune 	♆ 	U+2646 	&#9798; 	Neptune (planet)
    Pluto 	♇ 	U+2647 	&#9799; 	Pluto
    Aries 	♈ 	U+2648 	&#9800; 	Aries (constellation)
    Taurus 	♉ 	U+2649 	&#9801; 	Taurus (constellation)
    Gemini 	♊ 	U+264A 	&#9802; 	Gemini (constellation)
    Cancer 	♋ 	U+264B 	&#9803; 	Cancer (constellation)
    Leo 	♌ 	U+264C 	&#9804; 	Leo (constellation)
    Virgo 	♍ 	U+264D 	&#9805; 	Virgo (constellation)
    Libra 	♎ 	U+264E 	&#9806; 	Libra (constellation)
    Scorpius 	♏ 	U+264F 	&#9807; 	Scorpius (constellation), minim
    Sagittarius 	♐ 	U+2650 	&#9808; 	Sagittarius (constellation)
    Capricorn 	♑ 	U+2651 	&#9809; 	Capricornus (constellation)
    Aquarius 	♒ 	U+2652 	&#9810; 	Aquarius (constellation)
    Pisces 	♓ 	U+2653 	&#9811; 	Pisces (constellation)
    White chess king 	♔ 	U+2654 	&#9812; 	
    White chess queen 	♕ 	U+2655 	&#9813; 	
    White chess rook 	♖ 	U+2656 	&#9814; 	
    White chess bishop 	♗ 	U+2657 	&#9815; 	
    White chess knight 	♘ 	U+2658 	&#9816; 	
    White chess pawn 	♙ 	U+2659 	&#9817; 	
    Black chess king 	♚ 	U+265A 	&#9818; 	
    Black chess queen 	♛ 	U+265B 	&#9819; 	
    Black chess rook 	♜ 	U+265C 	&#9820; 	
    Black chess bishop 	♝ 	U+265D 	&#9821; 	
    Black chess knight 	♞ 	U+265E 	&#9822; 	
    Black chess pawn 	♟ 	U+265F 	&#9823; 	
    Black spade suit 	♠ 	U+2660 	&spades; 	
    White heart suit 	♡ 	U+2661 	&#9825; 	
    White diamond suit 	♢ 	U+2662 	&#9826; 	
    Black club suit 	♣ 	U+2663 	&clubs; 	
    White spade suit 	♤ 	U+2664 	&#9828; 	
    Black heart suit 	♥ 	U+2665 	&hearts; 	
    Black diamond suit 	♦ 	U+2666 	&diams; 	
    White club suit 	♧ 	U+2667 	&#9831; 	
    Hot springs 	♨ 	U+2668 	&#9832; 	Onsen
    Quarter note 	♩ 	U+2669 	&#9833; 	crotchet
    Eighth note 	♪ 	U+266A 	&#9834; 	quaver
    Beamed eighth notes 	♫ 	U+266B 	&#9835; 	linked quavers
    Beamed sixteenth notes 	♬ 	U+266C 	&#9836; 	linked semi-quavers
    Music flat sign 	♭ 	U+266D 	&#9837; 	
    Music natural sign 	♮ 	U+266E 	&#9838; 	
    Music sharp sign 	♯ 	U+266F 	&#9839; 	
    West Syriac cross 	♰ 	U+2670 	&#9840; 	
    East Syriac cross 	♱ 	U+2671 	&#9841; 	
    Universal recycling symbol 	♲ 	U+2672 	&#9842; 	
    Recycling symbol for type-1 plastics 	♳ 	U+2673 	&#9843; 	
    Recycling symbol for type-2 plastics 	♴ 	U+2674 	&#9844; 	
    Recycling symbol for type-3 plastics 	♵ 	U+2675 	&#9845; 	
    Recycling symbol for type-4 plastics 	♶ 	U+2676 	&#9846; 	
    Recycling symbol for type-5 plastics 	♷ 	U+2677 	&#9847; 	
    Recycling symbol for type-6 plastics 	♸ 	U+2678 	&#9848; 	
    Recycling symbol for type-7 plastics 	♹ 	U+2679 	&#9849; 	
    Recycling symbol for generic materials 	♺ 	U+267A 	&#9850; 	
    Black universal recycling symbol 	♻ 	U+267B 	&#9851; 	
    Recycled paper symbol 	♼ 	U+267C 	&#9852; 	
    Partially-recycled paper symbol 	♽ 	U+267D 	&#9853; 	
    Permanent paper sign 	♾ 	U+267E 	&#9854; 	
    Wheelchair symbol 	♿ 	U+267F 	&#9855; 	
    Die face-1 	⚀ 	U+2680 	&#9856; 	
    Die face-2 	⚁ 	U+2681 	&#9857; 	
    Die face-3 	⚂ 	U+2682 	&#9858; 	
    Die face-4 	⚃ 	U+2683 	&#9859; 	
    Die face-5 	⚄ 	U+2684 	&#9860; 	
    Die face-6 	⚅ 	U+2685 	&#9861; 	
    White circle with dot right 	⚆ 	U+2686 	&#9862; 	
    White circle with two dots 	⚇ 	U+2687 	&#9863; 	
    Black circle with white dot right 	⚈ 	U+2688 	&#9864; 	
    Black circle with two white dots 	⚉ 	U+2689 	&#9865; 	
    Monogram for yang 	⚊ 	U+268A 	&#9866; 	
    Monogram for yin 	⚋ 	U+268B 	&#9867; 	
    Digram for greater yang 	⚌ 	U+268C 	&#9868; 	
    Digram for lesser yin 	⚍ 	U+268D 	&#9869; 	
    Digram for lesser yang 	⚎ 	U+268E 	&#9870; 	
    Digram for greater yin 	⚏ 	U+268F 	&#9871; 	
    White flag 	⚐ 	U+2690 	&#9872; 	
    Black flag 	⚑ 	U+2691 	&#9873; 	
    Hammer and pick 	⚒ 	U+2692 	&#9874; 	Mining, working day
    Anchor 	⚓ 	U+2693 	&#9875; 	Nautical term, harbor
    Crossed swords 	⚔ 	U+2694 	&#9876; 	Military term, battleground, killed in action
    Staff of Aesculapius 	⚕ 	U+2695 	&#9877; 	Medical term
    Scales 	⚖ 	U+2696 	&#9878; 	Legal term, jurisprudence
    Alembic 	⚗ 	U+2697 	&#9879; 	Chemical term, chemistry
    Flower 	⚘ 	U+2698 	&#9880; 	Botanical term
    Gear 	⚙ 	U+2699 	&#9881; 	Technology, tools
    Staff of Hermes 	⚚ 	U+269A 	&#9882; 	Caduceus, commercial term, commerce
    Atom symbol 	⚛ 	U+269B 	&#9883; 	Nuclear installation
    Fleur-de-lis 	⚜ 	U+269C 	&#9884; 	France, Quebec, The Trinity, Scouting
    Outlined white star 	⚝ 	U+269D 	&#9885; 	Coat of arms of Morocco
    Three lines converging right 	⚞ 	U+269E 	&#9886; 	Someone speaking closed captioning symbol. From ARIB STD B24.
    Three lines converging left 	⚟ 	U+269F 	&#9886; 	Background speaking closed captioning symbol. From ARIB STD B24.
    Warning sign 	⚠ 	U+26A0 	&#9888; 	
    High voltage sign 	⚡ 	U+26A1 	&#9889; 	
    Doubled female sign 	⚢ 	U+26A2 	&#9890; 	Lesbianism
    Doubled male sign 	⚣ 	U+26A3 	&#9891; 	Male homosexuality
    Interlocked female and male sign 	⚤ 	U+26A4 	&#9892; 	Heterosexuality
    Male and female sign 	⚥ 	U+26A5 	&#9893; 	Transgender, hermaphrodite (in entomology)
    Male with stroke sign 	⚦ 	U+26A6 	&#9894; 	Transgender
    Male with stroke and male and female sign 	⚧ 	U+26A7 	&#9895; 	Transgender
    Vertical male with stroke sign 	⚨ 	U+26A8 	&#9896; 	Iron (II) sulfate
    Horizontal male with stroke sign 	⚩ 	U+26A9 	&#9897; 	Magnesium
    Medium white circle 	⚪ 	U+26AA 	&#9898; 	Asexuality, sexless, genderless, engaged, betrothed
    Medium black circle 	⚫ 	U+26AB 	&#9899; 	Symbol for record function
    Medium small white circle 	⚬ 	U+26AC 	&#9900; 	Engaged, betrothed
    Marriage symbol 	⚭ 	U+26AD 	&#9901; 	
    Divorce symbol 	⚮ 	U+26AE 	&#9902; 	
    Unmarried partnership symbol 	⚯ 	U+26AF 	&#9903; 	
    Coffin 	⚰ 	U+26B0 	&#9904; 	Buried (genealogy)
    Funeral urn 	⚱ 	U+26B1 	&#9905; 	Cremated (genealogy)
    Neuter 	⚲ 	U+26B2 	&#9906; 	
    Ceres 	⚳ 	U+26B3 	&#9907; 	1 Ceres (dwarf planet)
    Pallas 	⚴ 	U+26B4 	&#9908; 	2 Pallas
    Juno 	⚵ 	U+26B5 	&#9909; 	3 Juno
    Vesta 	⚶ 	U+26B6 	&#9910; 	4 Vesta
    Chiron 	⚷ 	U+26B7 	&#9911; 	2060 Chiron
    Black moon Lilith 	⚸ 	U+26B8 	&#9912; 	
    Sextile 	⚹ 	U+26B9 	&#9913; 	Sal ammoniac
    Semisextile 	⚺ 	U+26BA 	&#9914; 	
    Quincunx 	⚻ 	U+26BB 	&#9915; 	
    Sesquiquadrate 	⚼ 	U+26BC 	&#9916; 	
    Soccer ball 	⚽ 	U+26BD 	&#9917; 	
    Baseball 	⚾ 	U+26BE 	&#9918; 	
    Squared key 	⚿ 	U+26BF 	&#9919; 	Parental lock. From ARIB STD B24.
    White draughts man 	⛀ 	U+26C0 	&#9920; 	
    White draughts king 	⛁ 	U+26C1 	&#9921; 	
    Black draughts man 	⛂ 	U+26C2 	&#9922; 	
    Black draughts king 	⛃ 	U+26C3 	&#9923; 	
    Snowman without snow 	⛄ 	U+26C4 	&#9924; 	Light snow. From ARIB STD B24.
    Sun behind cloud 	⛅ 	U+26C5 	&#9925; 	Partly cloudy. From ARIB STD B24.
    Rain 	⛆ 	U+26C6 	&#9926; 	Rainy weather. From ARIB STD B24.
    Black snowman 	⛇ 	U+26C7 	&#9927; 	Heavy snow. From ARIB STD B24.
    Thunder cloud and rain 	⛈ 	U+26C8 	&#9928; 	Thunderstorm. From ARIB STD B24.
    Turned white shogi piece 	⛉ 	U+26C9 	&#9929; 	From ARIB STD B24.
    Turned black shogi piece 	⛊ 	U+26CA 	&#9930; 	From ARIB STD B24.
    White diamond in square 	⛋ 	U+26CB 	&#9931; 	From ARIB STD B24.
    Crossing lanes 	⛌ 	U+26CC 	&#9932; 	Accident. From ARIB STD B24.
    Disabled car 	⛍ 	U+26CD 	&#9933; 	From ARIB STD B24.
    Ophiuchus 	⛎ 	U+26CE 	&#9934; 	Ophiuchus (astrology), new in Unicode 6.
    Pick 	⛏ 	U+26CF 	&#9935; 	Under construction. From ARIB STD B24.
    Car sliding 	⛐ 	U+26D0 	&#9936; 	Icy road. From ARIB STD B24.
    Helmet with white cross 	⛑ 	U+26D1 	&#9937; 	Maintenance. From ARIB STD B24.
    Circled crossing lanes 	⛒ 	U+26D2 	&#9938; 	Road closed. From ARIB STD B24.
    Chains 	⛓ 	U+26D3 	&#9939; 	Tyre chains required. From ARIB STD B24.
    No entry 	⛔ 	U+26D4 	&#9940; 	From ARIB STD B24.
    Alternate one-way left way traffic 	⛕ 	U+26D5 	&#9941; 	From ARIB STD B24.
    Black two-way left way traffic 	⛖ 	U+26D6 	&#9942; 	From ARIB STD B24.
    White two-way left way traffic 	⛗ 	U+26D7 	&#9943; 	From ARIB STD B24.
    Black left lane merge 	⛘ 	U+26D8 	&#9944; 	From ARIB STD B24.
    White left lane merge 	⛙ 	U+26D9 	&#9945; 	From ARIB STD B24.
    Drive slow sign 	⛚ 	U+26DA 	&#9946; 	From ARIB STD B24.
    Heavy white down-pointing triangle 	⛛ 	U+26DB 	&#9947; 	Drive slow. From ARIB STD B24.
    Left closed entry 	⛜ 	U+26DC 	&#9948; 	From ARIB STD B24.
    Squared saltire 	⛝ 	U+26DD 	&#9949; 	Closed entry. From ARIB STD B24.
    Falling diagonal in white circle in black square 	⛞ 	U+26DE 	&#9950; 	Closed to large vehicles. From ARIB STD B24.
    Black truck 	⛟ 	U+26DF 	&#9951; 	Closed to large vehicles, alternate. From ARIB STD B24.
    Restricted left entry-1 	⛠ 	U+26E0 	&#9952; 	From ARIB STD B24.
    Restricted left entry-2 	⛡ 	U+26E1 	&#9953; 	From ARIB STD B24.
    Astronomical symbol for Uranus 	⛢ 	U+26E2 	&#9954; 	New in Unicode 6.
    Heavy circle with stroke and two dots above 	⛣ 	U+26E3 	&#9955; 	Public office. From ARIB STD B24.
    Pentagram 	⛤ 	U+26E4 	&#9956; 	New in Unicode 6
    Right-handed interlaced pentagram 	⛥ 	U+26E5 	&#9957; 	New in Unicode 6
    Left-handed interlaced pentagram 	⛦ 	U+26E6 	&#9958; 	New in Unicode 6
    Inverted pentagram 	⛧ 	U+26E7 	&#9959; 	New in Unicode 6
    Black cross on shield 	⛨ 	U+26E8 	&#9960; 	Hospital. From ARIB STD B24.
    Shinto shrine 	⛩ 	U+26E9 	&#9961; 	Torii. From ARIB STD B24.
    Church 	⛪ 	U+26EA 	&#9962; 	From ARIB STD B24.
    Castle 	⛫ 	U+26EB 	&#9963; 	From ARIB STD B24.
    Historic site 	⛬ 	U+26EC 	&#9964; 	From ARIB STD B24.
    Gear without hub 	⛭ 	U+26ED 	&#9965; 	Factory. From ARIB STD B24.
    Gear with handles 	⛮ 	U+26EE 	&#9966; 	Power plant, power substation. From ARIB STD B24.
    Map symbol for lighthouse 	⛯ 	U+26EF 	&#9967; 	From ARIB STD B24.
    Mountain 	⛰ 	U+26F0 	&#9968; 	From ARIB STD B24.
    Umbrella on ground 	⛱ 	U+26F1 	&#9969; 	Bathing beach. From ARIB STD B24.
    Fountain 	⛲ 	U+26F2 	&#9970; 	Park. From ARIB STD B24.
    Flag in hole 	⛳ 	U+26F3 	&#9971; 	Golf course. From ARIB STD B24.
    Ferry 	⛴ 	U+26F4 	&#9972; 	Ferry boat terminal. From ARIB STD B24.
    Sailboat 	⛵ 	U+26F5 	&#9973; 	Marina or yacht harbour. From ARIB STD B24.
    Square four corners 	⛶ 	U+26F6 	&#9974; 	Intersection. From ARIB STD B24.
    Skier 	⛷ 	U+26F7 	&#9975; 	Ski resort. From ARIB STD B24.
    Ice skate 	⛸ 	U+26F8 	&#9976; 	Ice skating rink. From ARIB STD B24.
    Person with ball 	⛹ 	U+26F9 	&#9977; 	Track and field, gymnasium. From ARIB STD B24.
    Tent 	⛺ 	U+26FA 	&#9978; 	Camping site. From ARIB STD B24.
    Japanese bank symbol 	⛻ 	U+26FB 	&#9979; 	From ARIB STD B24.
    Headstone graveyard symbol 	⛼ 	U+26FC 	&#9980; 	Graveyard, memorial park, cemetery. From ARIB STD B24.
    Fuel pump 	⛽ 	U+26FD 	&#9981; 	Petrol station, gas station. From ARIB STD B24.
    Cup on black square 	⛾ 	U+26FE 	&#9982; 	Drive-in restaurant. From ARIB STD B24.
    White flag with horizontal middle black stripe 	⛿ 	U+26FF 	&#9983; 	Japanese self-defence force site. From ARIB STD B24.

*** animal

 animal face

 🐭 🐮 🐯 🐵 🐶 🐷 🐸 🐰 🐱 🐲 🐴 🐹 🐺 🐻 🐼
 animals

 Chinese Zodiac

 🐀 🐁 🐂 🐃 🐄 🐅 🐇 🐉 🐍 🐎 🐏 🐐 🐑 🐒 🐓 🐔 🐕 🐩 🐖 🐗

 🐆 🐈 🐊 🐘 🐪 🐫 🐨

 🐿
 bird

 🕊 🐣 🐤 🐥 🐦 🐧
 fish, reptile, sea creature

 🐋 🐳 🐬 🐟 🐠 🐡 🐙 🐢 🐚 🐌
 insects: ant, bee, bug, beetle

 🐛 🐜 🐝 🐞 🕷 🕸 

*** sports

 Unicode Sports Emoji 🏃 🏊 ⛷ ⛸ ⚽ ⚾ 🏀 ⛺ 🏁
 By Xah Lee. Date: 2012-08-16. Last updated: 2016-02-13.
 sports

 🏃 🏊 🎿 ⛸ ⛷ 🏂 🏄 🏇 ⛹ 🏋 🏌
 ball games

 ⚽ ⚾ 🏈 🏉 🎾 🏀
 trophy, medal

 🏆 🏅
 flags

 🏁 ⛳ ⚐ ⚑ ⛿ 🚩 🏱 🏲 🏳
 misc

 ⛺

 🎯 🎰 🎱 🎲 🎳 🎴 



*** stars
 Unicode Stars ★ ✪ ✭ ✡ ⛤ ❉ ❄ ✿ 🌟 🌠
 By Xah Lee. Date: 2015-04-24. Last updated: 2016-07-05.

 All Unicode stars, asterisk, snowflakes, pentagrams, florettes.
**** Stars

  ★ ☆ ⚝ ✩ ✪ ✫ ✬ ✭ 🟉 🟊 ✮ ✯ ✰ ⭐ ⭑ ⭒

**** pentagram ⛤ ⛥ ⛦ ⛧

 🟀 🟁 🟂 🟃

 ✦ ✧ 🟄 🟅 🟆 🟇 🟈

 🌟 🌠

 🟋 🟌 🟍 ✶ ✡ 🔯 ☪

 ❂ ✴ ✵ ✷ ✸ 🟎 🟏 🟐 🟑

 ✹ 🟒 🟓 🟔
**** math stars

 ⋆ ⍟ ≛ ⍣
**** arabic star (changes direction: right to left)

 ٭
**** asterisk

  * ⁎ ⁑ ✱ ✲ ✻ ✼ ✽ ❃ ❉ ⧆ ꙳ ﹡ ＊

 ✢ ✣ ✤ ✥

 🞯 🞰 🞱 🞲 🞳 🞴

 🞵 🞶 🞷 🞸 🞹 🞺 🞻 🞼 🞽 🞾 🞿 ✳ ❊ ❋ ✺
**** math asterisk operator

 ∗ ⊛
**** COMBINING ASTERISK ABOVE

 ◌ ⃰
**** sparkle

 ✨ ❇ ❈
**** snowflake

 ❄ ❅ ❆
**** florette

 ✿ ❀ ❁ ✾ 


*** symbols

 ☂ ☔ ✈ ☀ ☼ ☁ ⚡ ⌁ ☇ ☈ ❄ ❅ ❆ ☃ ☉ ☄ ★ ☆ ☽ ☾ ⌛ ⌚ ⌂ ⏧ ✆ ☎ ☏ ✉ ☑ ✓ ✔ ⎷ ⍻ ✖ ✗ ✘
 ☒ ✕ ☓ ☕ ♿ ✌ ☚ ☛ ☜ ☝ ☞ ☟ ☹ ☺ ☻ ☯ ⚘ ☮ ⚰ ⚱ ⚠ ☠ ☢ ⚔ ⚓ ⎈ ⚒ ⚑ ⚐ ☡ ❂ ⚕ ⚖ ⚗ ✇ ☣ ⚙ ☤
 ⚚ ⚛ ⚜ ☥ ✝ ☦ ☧ ☨ ☩ † ☪ ☫ ☬ ☭ ✁ ✂ ✃ ✄ ✍ ✎ ✏ ✐  ✑ ✒ ✙ ✚ ✜ ✛ ♰ ♱ ✞ ✟ ✠ ✡ ☸ ✢ ✣ ✤ ✥
 ✦ ✧ ✩ ✪ ✫ ✬ ✭ ✮ ✯ ✰ ✲ ✱ ✳ ✴ ✵ ✶ ✷ ✸ ✹ ✺ ✻ ✼ ✽ ✾ ❀ ✿ ❁ ❃ ❇ ❈ ❉ ❊ ❋ ⁕ ☘ ❦ ❧ ☙ ❢ ❣
 ♀ ♂ ⚲ ⚢ ⚣ ⚤ ⚥ ⚦ ⚧ ⚨ ⚩ ☿ ♁ ⚯ ♛ ♕ ♚ ♔ ♜ ♖ ♝ ♗ ♞ ♘ ♟ ♙ ☗ ☖ ♠ ♣ ♦ ♥ ❤ ❥ ♡ ♢ ♤
 ♧ ⚀ ⚁ ⚂ ⚃ ⚄ ⚅ ⚇ ⚆ ⚈ ⚉ ♨ ♩ ♪ ♫ ♬ ♭ ♮ ♯ ⌨ ⏏ ⎗ ⎘ ⎙ ⎚ ⌥ ⎇ ⌘ ⌦ ⌫ ⌧ ♲ ♳ ♴ ♵ ♶ ♷
 ♸ ♹ ♺ ♻ ♼ ♽ ⁌ ⁍ ⎌ ⌇ ⌲ ⍝ ⍟ ⍣ ⍤ ⍥ ⍨ ⍩ ⎋ ♃ ♄ ♅ ♆ ♇ ♈ ♉ ♊ ♋ ♌ ♍ ♎ ♏ ♐ ♑ ♒
 ♓ ⏚ ⏛  

*** emoji

 🎳 🏂 🌁 🌉 🌋 🌌 🌏 🌑 🌓 🌔 🌕 🌛 🌠 🌰 🍏 🌱 🌼 🌽 🌿 🍄 🍇 🍈 🍌 🍍 🍑 🍒 🍩
 🍕 🍖 🍗 🍠 🍤 🍥 🍨 🍪 🍫 🍬 🍭 🍮 🍯 🍷 🍹 🎊 🎋 🎠 🎣 🎭 🎮 🎲 🎴 🎹 🎻 🎼 🎽
 🏡 🏮 🐌 🐜 🐝 🐞 🐡 🐢 🐣 🐥 🐩 🐼 🐽 🐾 👅 👓 👖 👚 👛 👝 👤 👪 👰 👹 👺 💌 💕
 💖 💞 💠 💥 💧 💫 💬 💮 💯 💲 💳 💴 💵 💸 💾 📁 📂 📃 📄 📅 📆 📇 📈 📉 📊 📋 📌
 📍 📎 📏 📐 📑 📒 📓 📔 📕 📙 📚 📛 📜 📞 📟 📤 📥 📦 📧 📨 📪 📰 📹 🔃 🔋 🔌 🔎
 🔏 🔐 🔖 🔗 🔘 🔙 🔚 🔛 🔜 🔟 🔠 🔡 🔢 🔣 🔤 🔦 🔧 🔩 🔪 🔮 🔵 🔶 🔷 🔸 🔹 🔼 🔽
 😄 😊 😃 😉 😍 😘 😚 😳 😌 😁 😜 😝 😒 😏 😓 😔 😞 😱 😠 😡 😪 😷 👿 👽 💛 💙 💜
 💗 💚 💔 💓 💘 🌟 💢 💤 💨 💦 🎶 🎵 🔥 💩 👍 👎 👌 👊 👋 👐 👆 👇 👉 👈 🙌 🙏 👏
 💪 🚶 🏃 👫 💃 👯 🙆 🙅 💁 🙇 💏 💑 💆 💇 💅 👦 👧 👩 👨 👶 👵 👴 👱 👲 👳 👷 👮
 👼 👸 💂 💀 👣 💋 👄 👂 👀 👃 ⛄ 🌙 🌀 🌊 🐱 🐶 🐭 🐹 🐰 🐺 🐸 🐯 🐨 🐻 🐷 🐮 🐗
 🐵 🐒 🐴 🐎 🐫 🐑 🐘 🐍 🐦 🐤 🐔 🐧 🐛 🐙 🐠 🐟 🐳 🐬 💐 🌸 🌹 🌻 🌺 🍁 🍃 🍂 🌴
 🌵 🌾 🐚 🎍 💝 🎎 🎒 🎓 🎏 🎆 🎇 🎐 🎑 🎃 👻 🎅 🎄 🎁 🔔 🎉 🎈 💿 📀 📷 🎥 💻 📺
 📱 📠 💽 📼 🔊 📢 📣 📻 📡 🔍 🔓 🔒 🔑 🔨 💡 📲 📩 📫 📮 🛀 🚽 💺 💰 🔱 🚬 💣 🔫
 💊 💉 🏈 🏀 ⚽ ⚾ 🎾 ⛳ 🎱 🏊 🏄 🎿 🏆 👾 🎷 🎸 👟 👡 👠 👢 👕 👔 👜 💄 💍 💎 🍵
 🍺 🍻 🍸 🍶 🍴 🍔 🍟 🍝 🍛 🍱 🍣 🍙 🍘 🍚 🍜 🍲 🍞 🍳 🍢 🍡 🍦 🍧 🎂 🍰 🍎 🍊 🍉
 🍓 🍆 🍅 🏠 🏫 🏢 🏣 🏥 🏦 🏪 🏩 🏨 💒 ⛪ 🏬 🌇 🌆 🏯 🏰 ⛺ 🏭 🗼 🗻 🌄 🌅 🌃 🗽
 🌈 🎡 ⛲ 🎢 🚢 🚤 ⛵ 🚀 🚲 🚙 🚗 🚕 🚌 🚓 🚒 🚑 🚚 🚃 🚉 🚄 🚅 🎫 ⛽ 🚥 🚧 🔰 🏧
 🎰 🚏 💈 🏁 🎌 🎯 🀄 🎬 📝 📖 🎨 🎤 🎧 🎺 👗 👘 👙 🎀 🎩 👑 👒 🌂 💼  

*** arrow
 ← → ↑ ↓ ↔ ↕ ↖ ↗ ↘ ↙ ↚ ↛ ↮ ⟵ ⟶ ⟷
 ⇐ ⇒ ⇑ ⇓ ⇔ ⇕ ⇖ ⇗ ⇘ ⇙ ⇍ ⇏ ⇎ ⟸ ⟹ ⟺
 ⇦ ⇨ ⇧ ⇩ ⬄ ⇳ ⬀ ⬁ ⬂ ⬃
 ⬅ ( ⮕ ➡ ) ⬆ ⬇ ⬈ ⬉ ⬊ ⬋ ⬌ ⬍
 🡐 🡒 🡑 🡓 🡔 🡕 🡖 🡗 🡘 🡙
 🡠 🡢 🡡 🡣 🡤 🡥 🡦 🡧
 🡨 🡪 🡩 🡫 🡬 🡭 🡮 🡯
 🡰 🡲 🡱 🡳 🡴 🡵 🡶 🡷
 🡸 🡺 🡹 🡻 🡼 🡽 🡾 🡿
 🢀 🢂 🢁 🢃 🢄 🢅 🢆 🢇
 ⇆ ⇄ ⇅ ⇵ ⇈ ⇊ ⇇ ⇉
 ⬱ ⇶
 ⇠ ⇢ ⇡ ⇣
 ⇚ ⇛ ⤊ ⤋ ⭅ ⭆ ⟰ ⟱
 ↢ ↣
 ↼ ⇀ ↽ ⇁ ↿ ↾ ⇃ ⇂
 ⇋ ⇌
 ⟻ ⟼
 ⇽ ⇾ ⇿
 ⇜ ⇝
 ⬳ ⟿
 ⥊ ⥋ ⥌ ⥍ ⥎ ⥏ ⥐ ⥑
 ⥒ ⥓ ⥔ ⥕ ⥖ ⥗ ⥘ ⥙
 ⥚ ⥛ ⥜ ⥝ ⥞ ⥟ ⥠ ⥡
 ⥢ ⥤ ⥣ ⥥ ⥦ ⥨ ⥧ ⥩ ⥮ ⥯
 ⥪ ⥬ ⥫ ⥭
 ↤ ↦ ↥ ↧
 ⇤ ⇥ ⤒ ⤓ ↨
 ↞ ↠ ↟ ↡
 ⇷ ⇸ ⤉ ⤈ ⇹
 ⇺ ⇻ ⇞ ⇟ ⇼
 ⬴ ⤀ ⬵ ⤁
 ⬹ ⤔
 ⬺ ⤕
 ⤂ ⤃ ⤄
 ⬶ ⤅
 ⬻ ⤖
 ⬷ ⤐
 ⬼ ⤗ ⬽ ⤘
 ⤆ ⤇
 ⤌ ⤍ ⤎ ⤏
 ⬸ ⤑
 ⤝ ⤞ ⤟ ⤠
 ⤙ ⤚ ⤛ ⤜
 ⤡ ⤢ ⤣ ⤤ ⤥ ⤦ ⤪ ⤨ ⤧ ⤩ ⤭ ⤮ ⤯ ⤰ ⤱ ⤲ ⤫ ⤬
 ↰ ↱ ↲ ↳ ⬐ ⬎ ⬑ ⬏ ↴ ↵
 ⤶ ⤷ ⤴ ⤵
 ↩ ↪ ↫ ↬
 ⥼ ⥽ ⥾ ⥿
 ⥂ ⥃ ⥄ ⭀ ⥱ ⥶ ⥸ ⭂ ⭈ ⭊ ⥵ ⭁ ⭇ ⭉ ⥲ ⭋ ⭌ ⥳ ⥴ ⥆ ⥅
 ⥹ ⥻
 ⬰ ⇴ ⥈ ⬾ ⥇ ⬲ ⟴
 ⥷ ⭃ ⥺ ⭄
 ⇱ ⇲
 ↸ ↹ ↯ ↭ ⥉ ⥰
 ⬿ ⤳
 ↜ ↝
 ⤼ ⤽
 ↶ ↷ ⤾ ⤿ ⤸ ⤹ ⤺ ⤻
 ↺ ↻ ⥀ ⥁ ⟲ ⟳
 Shaded/Shadow
 ➩ ➪ ➫ ➬ ➭ ➮ ➯ ➱
 🢠 🢡 🢢 🢣 🢤 🢥 🢦 🢧 🢨 🢩 🢪 🢫
 Decorative Arrows
 ⇪ ⇫ ⇬ ⇭ ⇮ ⇯
 ➳ ➵ ➴ ➶ ➸ ➷ ➹
 ➙ ➘ ➚
 ➾ ⇰
 ➛ ➜ ➔ ➝ ➞ ➟ ➠ ➥ ➦ ➧ ➨ ➲
 ➢ ➣ ➤
 ➺ ➻ ➼ ➽
 More
 ◄ ► ◅ ▻
 ◀ ▶ ▲ ▼
 🔙 🔚 🔛 🔜 🔝
 🠴 🠶 🠵 🠷
 🠼 🠾 🠽 🠿
 🡀 🡁 🡂 🡃
 🡄 🡆 🡅 🡇
 🠹 🠻 🠸 🠺
 🢐 🢒 🢑 🢓
 🢔 🢖 🢕 🢗
 🢘 🢚 🢙 🢛
 🠀 🠂 🠁 🠃
 🠄 🠆 🠅 🠇
 🠈 🠊 🠉 🠋
 🠐 🠒 🠑 🠓
 🠔 🠖 🠕 🠗
 🠘 🠚 🠙 🠛
 🠜 🠞 🠝 🠟
 🠠 🠢 🠱 🠳 🠤 🠦 🠨 🠪 🠬 🠮 🠰 🠲
 🢜 🢝 🢞 🢟 🢬 🢭
*** flower
 Leaf, Plant

 ⸙ 🌰 🌱 🌽 🌾 🌿 🍀 🍁 🍂 🍃 🌵
 Tree

 🎄 🎋 🌲 🌳 🌴
 Flower

 ⚘ 💮 🌷 🌸 🌹 🌺 🌻 🌼

 🎕 🏵 🏶 

*** car
 By Xah Lee. Date: 2015-11-22. Last updated: 2016-02-13.

 ferry, boat, ship. ⛴ ⛵ 🚢 🚣 🚤

 rocket, helicopter 🚀 🚁

 🚄 🚅

 trains, metro, lightrail, tram. 🚂 🚃 🚆 🚇 🚈 🚉 🚊 🚋

 🚝 🚞 🚟 🚠 🚡

 truck ⛟ 🚚 🚛

 bus 🚌 🚍 🚎 🚏 🚐

 🚕 🚖 🚗 🚘 🚙 🚜

 police, ambulance, fire truck 🚔 🚓 🚑 🚒

 🏍 🏎 

*** hand

 Unicode Hand Gestures 👍 👌 👊 ✌ 🖕 ✋ ☛
 By Xah Lee. Date: 2016-02-13

 👍 👎 🖒 🖓 👌 👊 👋 👏 👐

 ✌ 🖔 🖏 🖐 🖑 🖕 🖖 ✋
 Pointing Fingers

 ☚ ☛

 ☜ ☞ ☝ ☟

 👈 👉 👆 👇

 🖜 🖝 🖢 🖣

 🖘 🖙 🖞 🖟

 🖗 🖚 🖛 🖠 🖡
*** food

 Breakfast
 🍞 BREAD 🧀 CHEESE WEDGE 🥚 EGG 🥐 CROISSANT 🥖 BAGUETTE BREAD 🥞 PANCAKES 🍠 ROASTED SWEET POTATO
 Food
 🍔 HAMBURGER 🍕 SLICE OF PIZZA 🍝 SPAGHETTI 🍟 FRENCH FRIES 🍤 FRIED SHRIMP 🌭 HOT DOG 🌮 TACO 🌯 BURRITO
 🍛 CURRY AND RICE 🥙 STUFFED FLATBREAD 🥘 SHALLOW PAN OF FOOD 🥗 GREEN SALAD
 Meat
 🥓 BACON 🍖 MEAT ON BONE 🍗 POULTRY LEG
 Japanese Food
 🍚 COOKED RICE 🍜 STEAMING BOWL 🍘 RICE CRACKER 🍙 RICE BALL 🍣 SUSHI 🍥 FISH CAKE WITH SWIRL DESIGN 🍱 BENTO BOX 🍲 POT OF FOOD
 Fruit
 🍇 GRAPES 🍈 MELON 🍉 WATERMELON 🍊 TANGERINE 🍋 LEMON 🍌 BANANA 🍍 PINEAPPLE 🍎 RED APPLE 🍏 GREEN APPLE 🍐 PEAR 🍑 PEACH 🍒 CHERRIES 🍓 STRAWBERRY 🥝 KIWIFRUIT
 Veggie
 🍄 MUSHROOM 🍅 TOMATO 🍆 AUBERGINE 🌶 HOT PEPPER 🥑 AVOCADO 🥔 POTATO 🥕 CARROT 🥒 CUCUMBER 🥜 PEANUTS
 Desert
 🍰 SHORTCAKE 🎂 BIRTHDAY CAKE
 🍨 ICE CREAM 🍦 SOFT ICE CREAM 🍩 DOUGHNUT 🍪 COOKIE 🍿 POPCORN
 🍮 CUSTARD 🍯 HONEY POT 🍧 SHAVED ICE 🍡 DANGO 🍢 ODEN
 Candy
 🍫 CHOCOLATE BAR 🍬 CANDY 🍭 LOLLIPOP
 Alcoholic Drinks
 🍺 BEER MUG 🍻 CLINKING BEER MUGS 🍷 WINE GLASS 🍸 COCKTAIL GLASS 🍹 TROPICAL DRINK 🍶 SAKE BOTTLE AND CUP 🥂 CLINKING GLASSES 🥃 TUMBLER GLASS 🍾 BOTTLE WITH POPPING CORK
 Milk, Tea
 🥛 GLASS OF MILK 🍵 TEACUP WITHOUT HANDLE 🍼 BABY BOTTLE

 ☕ HOT BEVERAGE This must be coffee!
 Utensils
 🍳 COOKING 🍴 FORK AND KNIFE 🍽 FORK AND KNIFE WITH PLATE 🥄 SPOON 
*** unicode 9
 Unicode 9 New Emoji

 faces, emotion, gestures
 🤣 🤤 🤠 🤡 🤥 🤢
 🤶 🤴 🤵 🤰 🤦 🤷 🤳

 gestures
 🤞 🤙 🤛 🤜 🤚 🤝

 sport
 🕺 🤺 🤸 🤼 🤽 🤾 🤹

 animals
 🦍 🦊 🦌 🦏 🦇 🦅 🦆 🦉 🦎 🦈 🦐 🦑 🦋

 food
 🥝 🥑 🥔 🥕 🥒 🥜 🥐 🥖 🥞 🥓 🥙 🥚 🥘 🥗 🥛 🥂 🥃 🥄

 motor, traffic
 🛴 🛵 🛑

 misc things
 🛶 🥇 🥈 🥉 🥊 🥋 🥅 🥁 🛒

 WILTED flower, and one dark heart!
 🥀 🖤 

*** math
 [[https://www.johndcook.com/blog/math_symbols/][400 The plain HTTP request was sent to HTTPS port]]


 Table of symbols


 Symbol

 TeX

 Entity

 Unicode

 | ¬  | \neg            | &not;    | x00AC |
 | ± | \pm             | &plusmn; | x00B1 |
 | · | \cdot           | &middot; | x00B7 |
 | → | \to             | &rarr;   | x2192 |
 | ⇒ | \Rightarrow     | &rArr;   | x21D2 |
 | ⇔ | \Leftrightarrow | &hArr;   | x21D4 |
 | ∀ | \forall         | &forall; | x2200 |
 | ∂ | \partial        | &part;   | x2202 |
 | ∃ | \exists         | &exist;  | x2203 |
 | ∅  | \emptyset       | &empty;  | x2205 |
 | ∇ | \nabla          | &nabla;  | x2207 |
 | ∈ | \in             | &isin;   | x2208 |
 | ∉  | \not\in         | &notin;  | x2209 |
 | ∏ | \prod           | &prod;   | x220F |
 | ∑ | \sum            | &sum;    | x2211 |
 | √ | \surd           | &radic;  | x221A |
 | ∞ | \infty          | &infin;  | x221E |
 | ∧ | \wedge          | &and;    | x2227 |
 | ∨ | \vee            | &or;     | x2228 |
 | ∩ | \cap            | &cap;    | x2229 |
 | ∪ | \cup            | &cup;    | x222A |
 | ∫ | \int            | &int;    | x222B |
 | ≈  | \approx         | &asymp;  | x2248 |
 | ≠ | \neq            | &ne;     | x2260 |
 | ≡ | \equiv          | &equiv;  | x2261 |
 | ≤ | \leq            | &le;     | x2264 |
 | ≥ | \geq            | &ge;     | x2265 |
 | ⊂ | \subset         | &sub;    | x2282 |
 | ⊃ | \supset         | &sup;    | x2283 |
 | ° | ^\circ          | &deg;    | x00B0 |
 | × | \times          | &times;  | x00D7 |
 | ⌊  | \lfloor         | &lfloor; | x230A |
 | ⌋  | \rfloor         | &rfloor; | x230B |
 | ⌈  | \lceil          | &lceil;  | x2308 |
 | ⌉  | \rceil          | &rceil;  | x2309 |
*** cp949
    #+BEGIN_EXAMPLE

 
          00	01	02	03	04	05	06	07 	08	09	0a	0b	0c	0d	0e	0f
      a1a0		　	、	。	·	‥	…	¨	〃	­	―	∥	＼	∼	‘	’
      a1b0	“	”	〔	〕	〈	〉	《	》	「	」	『	』	【	】	±	×
      a1c0	÷	≠	≤	≥	∞	∴	°	′	″	℃	å	￠	￡	￥	♂	♀
      a1d0	∠	⊥	⌒	∂	∇	≡	≒	§	※	☆	★	○	●	◎	◇	◆
      a1e0	□	■	△	▲	▽	▼	→	←	↑	↓	↔	〓	≪	≫	√	∽
      a1f0	∝	∵	∫	∬	∈	∋	⊆	⊇	⊂	⊃	∪	∩	∧	∨	￢
      a1fe	
      a2a0		⇒	⇔	∀	∃	´	～	ˇ	˘	˝	˚	˙	¸	˛	¡	¿
      a2b0	ː	∮	∑	∏	¤	℉	‰	◁	◀	▷	▶	♤	♠	♡	♥	♧
      a2c0	♣	⊙	◈	▣	◐	◑	▒	▤	▥	▨	▧	▦	▩	♨	☏	☎
      a2d0	☜	☞	¶	†	‡	↕	↗	↙	↖	↘	♭	♩	♪	♬	㉿	㈜
      a2e0	№	㏇	™	㏂	㏘	℡	€	®	 	 	 	 	 	 	 	 
      a2f0	 	 	 	 	 	 	 	 	 	 	 	 	 	 	  


    #+END_EXAMPLE
   
    #+END_SRC

** fira font 
 https://github.com/tonsky/FiraCode/wiki/Setting-up-Emacs

   #+BEGIN_SRC emacs-lisp :tangle no
     ;;; Fira code
     ;; This works when using emacs --daemon + emacsclient
     (add-hook 'after-make-frame-functions (lambda (frame) (set-fontset-font t '(#Xe100 . #Xe16f) "Fira Code Symbol")))
     ;; This works when using emacs without server/client
     (set-fontset-font t '(#Xe100 . #Xe16f) "Fira Code Symbol")
     ;; I haven't found one statement that makes both of the above situations work, so I use both for now

     (defconst fira-code-font-lock-keywords-alist
       (mapcar (lambda (regex-char-pair)
                 `(,(car regex-char-pair)
                   (0 (prog1 ()
                        (compose-region (match-beginning 1)
                                        (match-end 1)
                                        ;; The first argument to concat is a string containing a literal tab
                                        ,(concat "	" (list (decode-char 'ucs (cadr regex-char-pair)))))))))
               '(("\\(www\\)"                   #Xe100)
                 ("[^/]\\(\\*\\*\\)[^/]"        #Xe101)
                 ("\\(\\*\\*\\*\\)"             #Xe102)
                 ("\\(\\*\\*/\\)"               #Xe103)
                 ("\\(\\*>\\)"                  #Xe104)
                 ("[^*]\\(\\*/\\)"              #Xe105)
                 ("\\(\\\\\\\\\\)"              #Xe106)
                 ("\\(\\\\\\\\\\\\\\)"          #Xe107)
                 ("\\({-\\)"                    #Xe108)
                 ("\\(\\[\\]\\)"                #Xe109)
                 ("\\(::\\)"                    #Xe10a)
                 ("\\(:::\\)"                   #Xe10b)
                 ("[^=]\\(:=\\)"                #Xe10c)
                 ("\\(!!\\)"                    #Xe10d)
                 ("\\(!=\\)"                    #Xe10e)
                 ("\\(!==\\)"                   #Xe10f)
                 ("\\(-}\\)"                    #Xe110)
                 ("\\(--\\)"                    #Xe111)
                 ("\\(---\\)"                   #Xe112)
                 ("\\(-->\\)"                   #Xe113)
                 ("[^-]\\(->\\)"                #Xe114)
                 ("\\(->>\\)"                   #Xe115)
                 ("\\(-<\\)"                    #Xe116)
                 ("\\(-<<\\)"                   #Xe117)
                 ("\\(-~\\)"                    #Xe118)
                 ("\\(#{\\)"                    #Xe119)
                 ("\\(#\\[\\)"                  #Xe11a)
                 ("\\(##\\)"                    #Xe11b)
                 ("\\(###\\)"                   #Xe11c)
                 ("\\(####\\)"                  #Xe11d)
                 ("\\(#(\\)"                    #Xe11e)
                 ("\\(#\\?\\)"                  #Xe11f)
                 ("\\(#_\\)"                    #Xe120)
                 ("\\(#_(\\)"                   #Xe121)
                 ("\\(\\.-\\)"                  #Xe122)
                 ("\\(\\.=\\)"                  #Xe123)
                 ("\\(\\.\\.\\)"                #Xe124)
                 ("\\(\\.\\.<\\)"               #Xe125)
                 ("\\(\\.\\.\\.\\)"             #Xe126)
                 ("\\(\\?=\\)"                  #Xe127)
                 ("\\(\\?\\?\\)"                #Xe128)
                 ("\\(;;\\)"                    #Xe129)
                 ("\\(/\\*\\)"                  #Xe12a)
                 ("\\(/\\*\\*\\)"               #Xe12b)
                 ("\\(/=\\)"                    #Xe12c)
                 ("\\(/==\\)"                   #Xe12d)
                 ("\\(/>\\)"                    #Xe12e)
                 ("\\(//\\)"                    #Xe12f)
                 ("\\(///\\)"                   #Xe130)
                 ("\\(&&\\)"                    #Xe131)
                 ("\\(||\\)"                    #Xe132)
                 ("\\(||=\\)"                   #Xe133)
                 ("[^|]\\(|=\\)"                #Xe134)
                 ("\\(|>\\)"                    #Xe135)
                 ("\\(\\^=\\)"                  #Xe136)
                 ("\\(\\$>\\)"                  #Xe137)
                 ("\\(\\+\\+\\)"                #Xe138)
                 ("\\(\\+\\+\\+\\)"             #Xe139)
                 ("\\(\\+>\\)"                  #Xe13a)
                 ("\\(=:=\\)"                   #Xe13b)
                 ("[^!/]\\(==\\)[^>]"           #Xe13c)
                 ("\\(===\\)"                   #Xe13d)
                 ("\\(==>\\)"                   #Xe13e)
                 ("[^=]\\(=>\\)"                #Xe13f)
                 ("\\(=>>\\)"                   #Xe140)
                 ("\\(<=\\)"                    #Xe141)
                 ("\\(=<<\\)"                   #Xe142)
                 ("\\(=/=\\)"                   #Xe143)
                 ("\\(>-\\)"                    #Xe144)
                 ("\\(>=\\)"                    #Xe145)
                 ("\\(>=>\\)"                   #Xe146)
                 ("[^-=]\\(>>\\)"               #Xe147)
                 ("\\(>>-\\)"                   #Xe148)
                 ("\\(>>=\\)"                   #Xe149)
                 ("\\(>>>\\)"                   #Xe14a)
                 ("\\(<\\*\\)"                  #Xe14b)
                 ("\\(<\\*>\\)"                 #Xe14c)
                 ("\\(<|\\)"                    #Xe14d)
                 ("\\(<|>\\)"                   #Xe14e)
                 ("\\(<\\$\\)"                  #Xe14f)
                 ("\\(<\\$>\\)"                 #Xe150)
                 ("\\(<!--\\)"                  #Xe151)
                 ("\\(<-\\)"                    #Xe152)
                 ("\\(<--\\)"                   #Xe153)
                 ("\\(<->\\)"                   #Xe154)
                 ("\\(<\\+\\)"                  #Xe155)
                 ("\\(<\\+>\\)"                 #Xe156)
                 ("\\(<=\\)"                    #Xe157)
                 ("\\(<==\\)"                   #Xe158)
                 ("\\(<=>\\)"                   #Xe159)
                 ("\\(<=<\\)"                   #Xe15a)
                 ("\\(<>\\)"                    #Xe15b)
                 ("[^-=]\\(<<\\)"               #Xe15c)
                 ("\\(<<-\\)"                   #Xe15d)
                 ("\\(<<=\\)"                   #Xe15e)
                 ("\\(<<<\\)"                   #Xe15f)
                 ("\\(<~\\)"                    #Xe160)
                 ("\\(<~~\\)"                   #Xe161)
                 ("\\(</\\)"                    #Xe162)
                 ("\\(</>\\)"                   #Xe163)
                 ("\\(~@\\)"                    #Xe164)
                 ("\\(~-\\)"                    #Xe165)
                 ("\\(~=\\)"                    #Xe166)
                 ("\\(~>\\)"                    #Xe167)
                 ("[^<]\\(~~\\)"                #Xe168)
                 ("\\(~~>\\)"                   #Xe169)
                 ("\\(%%\\)"                    #Xe16a)
                ;; ("\\(x\\)"                   #Xe16b) This ended up being hard to do properly so i'm leaving it out.
                 ("[^:=]\\(:\\)[^:=]"           #Xe16c)
                 ("[^\\+<>]\\(\\+\\)[^\\+<>]"   #Xe16d)
                 ("[^\\*/<>]\\(\\*\\)[^\\*/<>]" #Xe16f))))

     (defun add-fira-code-symbol-keywords ()
       (font-lock-add-keywords nil fira-code-font-lock-keywords-alist))

     (add-hook 'prog-mode-hook
               #'add-fira-code-symbol-keywords)
   #+END_SRC
  

   

* spacing
  #+begin_src emacs-lisp :tangle no
    (defun text-margins ()
      (setq left-margin-width 16)
      (setq right-margin-width 16))
    (add-hook 'markdown-mode-hook 'text-margins)

    (defun prog-margins ()
      (setq left-margin-width 2)
      (setq right-margin-width 2))
    (add-hook 'prog-mode-hook 'prog-margins)

    (defun text-linespacing ()
      (setq line-spacing 0.5))
    (add-hook 'markdown-mode-hook 'text-linespacing)

    (defun prog-linespacing ()
      (setq line-spacing nil))
    (add-hook 'prog-mode-hook 'prog-linespacing)
  #+end_src


* modline at top

** modline position
   #+begin_src emacs-lisp
     (setq-default header-line-format mode-line-format)
     (setq-default mode-line-format nil)
   #+end_src
   

** posframe
   #+begin_src emacs-lisp 
     (leaf posframe
       :ensure t
       :preface
       (defun my-posframe-arghandler (buffer-or-name arg-name value)
         (let ((info '(:internal-border-width 10
                        ;; :background-color "grey30"
                        ;; :background-color "steel blue"
                       :internal-border-color "white")))
           (or (plist-get info arg-name) value)))
       :custom
       ((posframe-arghandler . #'my-posframe-arghandler)
        (posframe-mouse-banish  . nil)))


     (leaf eldoc-posframe
       :require t
       :global-minor-mode global-eldoc-posframe-mode
       :config
       (setq eldoc-idle-delay 2)
       (global-eldoc-mode nil)) 
   #+end_src

   #+RESULTS:
   : eldoc-posframe

   

*** ivy+helm
    #+begin_src emacs-lisp :tangle no

      (leaf ivy-posframe
        :ensure t
        :custom
        (ivy-posframe-display-functions-alist . '((t . ivy-posframe-display-at-frame-top-center)))
        :init (ivy-posframe-mode 1))

      (leaf helm-posframe
        :ensure t
        :custom
        (helm-posframe-poshandler .  #'posframe-poshandler-window-top-center)
        :init ( helm-posframe-enable ))
    #+end_src
*** maple
    #+begin_src emacs-lisp  :tangle no
      (leaf maple-minibuffer 
        :require t
        :global-minor-mode maple-minibuffer-mode
        :config
        (setq
         ;; maple-minibuffer:position-type 'window-bottom-left
         ;; maple-minibuffer:height nil
         maple-minibuffer:width 0.8
         maple-minibuffer:cache t
         maple-minibuffer:border-color "gray50"
         ;; maple-minibuffer:action '(read-from-minibuffer read-string)
         maple-minibuffer:ignore-action '(swiper )
         maple-minibuffer:action '(selectrum-completing-read))

        (add-to-list 'maple-minibuffer:ignore-action 'org-schedule)
        (add-to-list 'maple-minibuffer:ignore-regexp "^helm-")
        (defun maple-minibuffer:parameters ()
          "Maple minibuffer parameters."
          `((height . ,(or maple-minibuffer:height 10))
            (width . ,(or maple-minibuffer:width (window-pixel-width)))
            (left-fringe . 5)
            (right-fringe . 5)))
        )
      


    #+end_src

    #+RESULTS:
    : maple-minibuffer
   
** mini-frame
   #+begin_src emacs-lisp
     (leaf mini-frame
       :ensure t
       :config
       (mini-frame-mode))

     (defun mini-frame-background (&optional frame) "RoyalBlue4" )
     (setf mini-frame-background-color-function #'mini-frame-background)
   #+end_src

   #+RESULTS:
   : mini-frame-background

** popwin
   #+begin_src emacs-lisp
     (leaf popwin
       :ensure t
       :global-minor-mode popwin-mode
       :config

       (general-define-key
        :keymaps 'popwin:keymap

        "o" #'(lambda () (interactive) (popwin:popup-buffer-tail "*Occur*") (setq popwin:popup-window-stuck-p t))
        "O" 'popwin:display-buffer
        "g" #'(lambda () (interactive) (popwin:popup-buffer-tail "*Grep*") (setq popwin:popup-window-stuck-p t)))


       ;;(general-define-key
       ;; (kbd "C-z") popwin:keymap
       ;; (kbd "C-z C-z") #'(lambda () (interactive) (posframe-delete-all) (keyboard-quit)))
       )
   #+end_src

   #+RESULTS:
   : popwin
** whichkey
   #+begin_src emacs-lisp
     (leaf which-key-posframe
       :ensure t
       :global-minor-mode which-key-posframe-mode)
   #+end_src

   #+RESULTS:
   : which-key-posframe
  

   
** transient
   #+begin_src emacs-lisp
     (leaf transient-posframe
       :config
       (transient-posframe-mode))
   #+end_src

   #+RESULTS:
   : transient-posframe

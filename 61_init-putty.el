;; (if (eq system-uses-terminfo t)
;;     (progn                              ;; PuTTY hack - needs to be in SCO mode
;;       (define-key key-translation-map [\e] [\M])
;;       (define-key input-decode-map "\e[H" [home])
;;       (define-key input-decode-map "\e[F" [end])
;;       (define-key input-decode-map "\e[D" [S-left])
;;       (define-key input-decode-map "\e[C" [S-right])
;;       (define-key input-decode-map "\e[A" [S-up])
;;       (define-key input-decode-map "\e[B" [S-down])
;;       (define-key input-decode-map "\e[C" [S-right])
;;       (define-key input-decode-map "\e[I" [prior])
;;       (define-key input-decode-map "\e[G" [next])
;;       (define-key input-decode-map "\e[M" [f1])
;;       (define-key input-decode-map "\e[Y" [S-f1])
;;       (define-key input-decode-map "\e[k" [C-f1])
;;       (define-key input-decode-map "\e\e[M" [M-f1])
;;       (define-key input-decode-map "\e[N" [f2])
;;       (define-key input-decode-map "\e[Z" [S-f2])
;;       (define-key input-decode-map "\e[l" [C-f2])
;;       (define-key input-decode-map "\e\e[N" [M-f2])
;;       (define-key input-decode-map "\e[O" [f3])
;;       (define-key input-decode-map "\e[a" [S-f3])
;;       (define-key input-decode-map "\e[m" [C-f3])
;;       (define-key input-decode-map "\e\e[O" [M-f3])
;;       (define-key input-decode-map "\e[P" [f4])
;;       (define-key input-decode-map "\e[b" [S-f4])
;;       (define-key input-decode-map "\e[n" [C-f4])
;;       (define-key input-decode-map "\e\e[P" [M-f4])
;;       (define-key input-decode-map "\e[Q" [f5])
;;       (define-key input-decode-map "\e[c" [S-f5])
;;       (define-key input-decode-map "\e[o" [C-f5])
;;       (define-key input-decode-map "\e\e[Q" [M-f5])
;;       (define-key input-decode-map "\e[R" [f6])
;;       (define-key input-decode-map "\e[d" [S-f6])
;;       (define-key input-decode-map "\e[p" [C-f6])
;;       (define-key input-decode-map "\e\e[R" [M-f6])
;;       (define-key input-decode-map "\e[S" [f7])
;;       (define-key input-decode-map "\e[e" [S-f7])
;;       (define-key input-decode-map "\e[q" [C-f7])
;;       (define-key input-decode-map "\e\e[S" [M-f7])
;;       (define-key input-decode-map "\e[T" [f8])
;;       (define-key input-decode-map "\e[f" [S-f8])
;;       (define-key input-decode-map "\e[r" [C-f8])
;;       (define-key input-decode-map "\e\e[T" [M-f8])
;;       (define-key input-decode-map "\e[U" [f9])
;;       (define-key input-decode-map "\e[g" [S-f9])
;;       (define-key input-decode-map "\e[s" [C-f9])
;;       (define-key input-decode-map "\e\e[U" [M-f9])
;;       (define-key input-decode-map "\e[V" [f10])
;;       (define-key input-decode-map "\e[h" [S-f10])
;;       (define-key input-decode-map "\e[_" [C-f10])
;;       (define-key input-decode-map "\e\e[V" [M-f10])
;;       (define-key input-decode-map "\e[W" [f11])
;;       (define-key input-decode-map "\e[i" [S-f11])
;;       (define-key input-decode-map "\e[u" [C-f11])
;;       (define-key input-decode-map "\e\e[W" [M-f11])
;;       (define-key input-decode-map "\e[X" [f12])
;;       (define-key input-decode-map "\e[j" [S-f12])
;;       (define-key input-decode-map "\e[v" [C-f12])
;;       (define-key input-decode-map "\e\e[X" [M-f12])))


;;; http://stackoverflow.com/questions/11721224/shift-arrow-selection-in-emacs
;; '^[' are mapped to '\e'

(cond
 ((eq system-uses-terminfo t)
  
  (defun putty-patch ()
    (interactive)
    (xterm-mouse-mode t)
    (define-key input-decode-map "\M-[{"  [C-{])
    (define-key input-decode-map "\M-[}"  [C-}])
    (global-set-key  (kbd "<C-{>" ) 'paredit-backward-barf-sexp)
    (global-set-key  (kbd "<C-}>" ) 'paredit-forward-barf-sexp)

    ;; (define-key input-decode-map "\eOA"    [S-up])
    ;; (define-key input-decode-map "\eOB"    [S-down])
    ;; (define-key input-decode-map "\eOC"    [S-right])
    ;; (define-key input-decode-map "\eOD"    [S-left])

    (define-key input-decode-map "\eOA"    [C-up])
    (define-key input-decode-map "\eOB"    [C-down])
    (define-key input-decode-map "\eOC"    [C-right])
    (define-key input-decode-map "\eOD"    [C-left])

    (define-key input-decode-map "\e\eOA"  [M-S-up])
    (define-key input-decode-map "\e\eOB"  [M-S-down])
    (define-key input-decode-map "\e\eOC"  [M-S-right])
    (define-key input-decode-map "\e\eOD"  [M-S-left])

    ;; (define-key input-decode-map "\eOA"    [C-S-up])
    ;; (define-key input-decode-map "\eOB"    [C-S-down])
    ;; (define-key input-decode-map "\eOC"    [C-S-right])
    ;; (define-key input-decode-map "\eOD"    [C-S-left])

    (define-key input-decode-map "\e\e[A"  [M-up])
    (define-key input-decode-map "\e\e[B"  [M-down])
    (define-key input-decode-map "\e\e[C"  [M-right])
    (define-key input-decode-map "\e\e[D"  [M-left]))

  (require 'xterm-color)

  (xterm-mouse-mode)
  (put 'downcase-region 'disabled nil))
 nil
 )
